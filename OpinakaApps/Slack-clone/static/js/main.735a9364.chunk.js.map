{"version":3,"sources":["actions/index.js","actions/types.js","firebase.js","components/ColorPanel/ColorPanel.js","components/SidePanel/UserPanel.js","components/SidePanel/Channels.js","components/SidePanel/DirectMessages.js","components/SidePanel/Starred.js","components/SidePanel/SidePanel.js","components/Messages/MessagesHeader.js","components/Messages/FileModal.js","components/Messages/ProgressBar.js","components/Messages/MessageForm.js","components/Messages/Message.js","components/Messages/Typing.js","components/Messages/Skeleton.js","components/Messages/Messages.js","components/MetaPanel/MetaPanel.js","components/VideoCalling/VideoCalling.js","components/App.js","components/Auth/Login.js","components/Auth/Register.js","Spinner.js","registerServiceWorker.js","reducers/index.js","index.js"],"names":["setBypass","bool","type","payload","bypass","setCurrentChannel","channel","currentChannel","setPrivateChannel","isPrivateChannel","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ColorPanel","state","modal","primary","secondary","user","props","currentUser","usersRef","database","ref","userColors","removeListener","child","uid","off","addListener","userId","on","snap","unshift","val","setState","handleChangePrimary","color","hex","handleChangeSecondary","handleSaveColors","saveColors","push","update","then","console","log","closeModal","catch","err","error","displayUserColors","colors","length","map","i","Fragment","key","Divider","className","onClick","setColors","style","background","openModal","this","Sidebar","as","Menu","icon","inverted","vertical","visible","width","Button","size","Modal","basic","open","onClose","Header","Content","Segment","Label","content","onChange","Actions","Icon","name","React","Component","connect","primaryColor","secondaryColor","UserPanel","previewImage","croppedImage","blob","uploadedCroppedImage","storageRef","storage","userRef","auth","metadata","contentType","dropdownOptions","text","displayName","disabled","handleSignout","uploadCroppedImage","put","getDownloadURL","downloadURL","changeAvatar","updateProfile","photoURL","avatar","handleChange","event","file","target","files","reader","FileReader","readAsDataURL","addEventListener","result","handleCropImage","avatarEditor","getImageScaledToCanvas","toBlob","imageUrl","URL","createObjectURL","signOut","Grid","Column","Row","padding","margin","floated","Dropdown","trigger","Image","src","spaced","options","Input","fluid","label","centered","stackable","columns","node","image","height","border","scale","Channels","activeChannel","channels","channelName","channelDetails","channelsRef","messagesRef","typingRef","notifications","firstLoad","addListeners","loadedChannels","setFirstChannel","addNotificationListener","channelId","handleNotifications","id","currentChannelId","lastTotal","index","findIndex","notification","total","numChildren","count","lastKnownTotal","removeListeners","forEach","firstChannel","setActiveChannel","addChannel","newChannel","details","createdBy","handleSubmit","preventDefault","isFormValid","value","changeChannel","remove","clearNotifications","updatedNotifications","getNotificationCount","displayChannels","Item","opacity","active","Form","onSubmit","Field","DirectMessages","users","connectedRef","presenceRef","currentUserUid","loadedUsers","set","onDisconnect","addStatusToUser","connected","updatedUsers","reduce","acc","concat","isUserOnline","status","channelData","getChannelId","currentUserId","fontStyle","Starred","starredChannels","starredChannel","channelToRemove","filteredChannels","filter","SidePanel","fixed","fontSize","MessagesHeader","numUniqueUsers","handleSearchChange","searchLoading","handleStar","isChannelStarred","clearing","marginBottom","Subheader","loading","placeholder","FileModal","authorized","addFile","sendFile","uploadFile","isAuthorized","mime","lookup","clearFile","filename","includes","ProgressBar","uploadState","percentUploaded","Progress","percent","progress","indicating","MessageForm","uploadTask","message","errors","emojiPicker","handleKeyDown","keyCode","sendMessage","handleTogglePicker","handleAddEmoji","emoji","oldMessage","newMessage","colonToUnicode","colons","setTimeout","messageInputRef","focus","replace","x","emojiIndex","emojis","unicode","native","createMessage","fileUrl","timestamp","ServerValue","TIMESTAMP","getMessagesRef","getPath","pathToUpload","filePath","uuid","Math","round","bytesTransferred","totalBytes","snapshot","downloadUrl","sendFileMessage","cancel","onSelect","title","onKeyDown","labelPosition","some","Group","widths","isOwnMessage","Message","Comment","Avatar","Author","Metadata","moment","fromNow","hasOwnProperty","isImage","Text","Typing","Skeleton","Messages","privateChannel","privateMessagesRef","messages","messagesLoading","searchTerm","searchResults","typingUsers","listeners","listener","addToListeners","newListener","scrollToBottom","messagesEnd","scrollIntoView","behavior","addMessageListener","addTypingListeners","loadedMessages","countUniqueUsers","countUserPosts","addUserStarsListener","once","data","prevStarred","Object","keys","prevState","starChannel","handleSearchMessages","channelMessages","regex","RegExp","match","uniqueUsers","plural","userPosts","setUserPosts","displayMessages","displayChannelName","displayTypingUsers","display","alignItems","displayMessageSkeleton","Array","_","prevProps","MetaPanel","activeIndex","setActiveIndex","titleProps","newIndex","formatCount","num","displayTopPosters","posts","entries","sort","a","b","List","Description","slice","attached","Accordion","styled","Title","circular","withRouter","history","useState","room","setRoom","setName","call","setCall","password","setPassword","roomName","onMeetingEnd","loadingComponent","containerStyles","textAlign","verticalAlign","maxWidth","stacked","iconPosition","e","marginLeft","Login","email","displayErrors","signInWithEmailAndPassword","signedInUser","handleInputError","inputName","toLowerCase","to","Register","username","passwordConfirmation","isFormEmpty","isPasswordValid","createUserWithEmailAndPassword","createdUser","md5","saveUser","Spinner","Dimmer","Loader","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initialUserState","isLoading","initialChannelState","initialColorsState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","Root","onAuthStateChanged","setUser","clearUser","exact","path","component","App","RootWithAuth","ReactDOM","render","document","getElementById","process","origin","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.735a9364.chunk.js","sourcesContent":["import * as actionTypes from \"./types\";\r\n\r\n/* User Actions */\r\nexport const setUser = (user) => {\r\n  return {\r\n    type: actionTypes.SET_USER,\r\n    payload: {\r\n      currentUser: user,\r\n    },\r\n  };\r\n};\r\n\r\nexport const clearUser = () => {\r\n  return {\r\n    type: actionTypes.CLEAR_USER,\r\n  };\r\n};\r\n\r\nexport const setBypass = (bool) => {\r\n  return {\r\n    type: actionTypes.SET_BYPASS,\r\n    payload: {\r\n      bypass: bool,\r\n    },\r\n  };\r\n};\r\n/* Channel Actions */\r\nexport const setCurrentChannel = (channel) => {\r\n  return {\r\n    type: actionTypes.SET_CURRENT_CHANNEL,\r\n    payload: {\r\n      currentChannel: channel,\r\n    },\r\n  };\r\n};\r\n\r\nexport const setPrivateChannel = (isPrivateChannel) => {\r\n  return {\r\n    type: actionTypes.SET_PRIVATE_CHANNEL,\r\n    payload: {\r\n      isPrivateChannel,\r\n    },\r\n  };\r\n};\r\n\r\nexport const setUserPosts = (userPosts) => {\r\n  return {\r\n    type: actionTypes.SET_USER_POSTS,\r\n    payload: {\r\n      userPosts,\r\n    },\r\n  };\r\n};\r\n\r\n/* Colors Actions */\r\nexport const setColors = (primaryColor, secondaryColor) => {\r\n  return {\r\n    type: actionTypes.SET_COLORS,\r\n    payload: {\r\n      primaryColor,\r\n      secondaryColor,\r\n    },\r\n  };\r\n};\r\n","/* User Action Types */\r\nexport const SET_USER = \"SET_USER\";\r\nexport const CLEAR_USER = \"CLEAR_USER\";\r\nexport const SET_BYPASS = \"SET_BYPASS\";\r\n\r\n/* Channel Action Types */\r\nexport const SET_CURRENT_CHANNEL = \"SET_CURRENT_CHANNEL\";\r\nexport const SET_PRIVATE_CHANNEL = \"SET_PRIVATE_CHANNEL\";\r\nexport const SET_USER_POSTS = \"SET_USER_POSTS\";\r\n\r\n/* Colors Action Types */\r\nexport const SET_COLORS = \"SET_COLORS\";\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport \"firebase/storage\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyAsvxc87ycDDAFSv2CeoATdTl_Kw-nCDlk\",\r\n  authDomain: \"react-slack-clone-bed12.firebaseapp.com\",\r\n  databaseURL: \"https://react-slack-clone-bed12.firebaseio.com\",\r\n  projectId: \"react-slack-clone-bed12\",\r\n  storageBucket: \"react-slack-clone-bed12.appspot.com\",\r\n  messagingSenderId: \"824834818231\",\r\n  appId: \"1:824834818231:web:7eeef9ab8fd59efe804d32\",\r\n  measurementId: \"G-1WKEGVWEHW\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\n\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { setColors } from \"../../actions\";\r\n// prettier-ignore\r\nimport { Sidebar, Menu, Divider, Button, Modal, Icon, Label, Segment } from \"semantic-ui-react\";\r\nimport { SliderPicker } from \"react-color\";\r\n\r\nclass ColorPanel extends React.Component {\r\n  state = {\r\n    modal: false,\r\n    primary: \"\",\r\n    secondary: \"\",\r\n    user: this.props.currentUser,\r\n    usersRef: firebase.database().ref(\"users\"),\r\n    userColors: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.state.user) {\r\n      this.addListener(this.state.user.uid);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListener();\r\n  }\r\n\r\n  removeListener = () => {\r\n    this.state.usersRef.child(`${this.state.user.uid}/colors`).off();\r\n  };\r\n\r\n  addListener = (userId) => {\r\n    let userColors = [];\r\n    this.state.usersRef.child(`${userId}/colors`).on(\"child_added\", (snap) => {\r\n      userColors.unshift(snap.val());\r\n      this.setState({ userColors });\r\n    });\r\n  };\r\n\r\n  handleChangePrimary = (color) => this.setState({ primary: color.hex });\r\n\r\n  handleChangeSecondary = (color) => this.setState({ secondary: color.hex });\r\n\r\n  handleSaveColors = () => {\r\n    if (this.state.primary && this.state.secondary) {\r\n      this.saveColors(this.state.primary, this.state.secondary);\r\n    }\r\n  };\r\n\r\n  saveColors = (primary, secondary) => {\r\n    this.state.usersRef\r\n      .child(`${this.state.user.uid}/colors`)\r\n      .push()\r\n      .update({\r\n        primary,\r\n        secondary,\r\n      })\r\n      .then(() => {\r\n        console.log(\"Colors added\");\r\n        this.closeModal();\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  displayUserColors = (colors) =>\r\n    colors.length > 0 &&\r\n    colors.map((color, i) => (\r\n      <React.Fragment key={i}>\r\n        <Divider />\r\n        <div\r\n          className=\"color__container\"\r\n          onClick={() => this.props.setColors(color.primary, color.secondary)}\r\n        >\r\n          <div className=\"color__square\" style={{ background: color.primary }}>\r\n            <div\r\n              className=\"color__overlay\"\r\n              style={{ background: color.secondary }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    ));\r\n\r\n  openModal = () => this.setState({ modal: true });\r\n\r\n  closeModal = () => this.setState({ modal: false });\r\n\r\n  render() {\r\n    const { modal, primary, secondary, userColors } = this.state;\r\n\r\n    return (\r\n      <Sidebar\r\n        as={Menu}\r\n        icon=\"labeled\"\r\n        inverted\r\n        vertical\r\n        visible\r\n        width=\"very thin\"\r\n      >\r\n        <Divider />\r\n        <Button icon=\"add\" size=\"small\" color=\"blue\" onClick={this.openModal} />\r\n        {this.displayUserColors(userColors)}\r\n\r\n        {/* Color Picker Modal */}\r\n        <Modal basic open={modal} onClose={this.closeModal}>\r\n          <Modal.Header>Choose App Colors</Modal.Header>\r\n          <Modal.Content>\r\n            <Segment inverted>\r\n              <Label content=\"Primary Color\" />\r\n              <SliderPicker\r\n                color={primary}\r\n                onChange={this.handleChangePrimary}\r\n              />\r\n            </Segment>\r\n\r\n            <Segment inverted>\r\n              <Label content=\"Secondary Color\" />\r\n              <SliderPicker\r\n                color={secondary}\r\n                onChange={this.handleChangeSecondary}\r\n              />\r\n            </Segment>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button color=\"green\" inverted onClick={this.handleSaveColors}>\r\n              <Icon name=\"checkmark\" /> Save Colors\r\n            </Button>\r\n            <Button color=\"red\" inverted onClick={this.closeModal}>\r\n              <Icon name=\"remove\" /> Cancel\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { setColors })(ColorPanel);\r\n","import React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport AvatarEditor from \"react-avatar-editor\";\r\n// prettier-ignore\r\nimport { Grid, Header, Icon, Dropdown, Image, Modal, Input, Button } from \"semantic-ui-react\";\r\n\r\nclass UserPanel extends React.Component {\r\n  state = {\r\n    user: this.props.currentUser,\r\n    modal: false,\r\n    previewImage: \"\",\r\n    croppedImage: \"\",\r\n    blob: null,\r\n    uploadedCroppedImage: \"\",\r\n    storageRef: firebase.storage().ref(),\r\n    userRef: firebase.auth().currentUser,\r\n    usersRef: firebase.database().ref(\"users\"),\r\n    metadata: {\r\n      contentType: \"image/jpeg\",\r\n    },\r\n  };\r\n\r\n  openModal = () => this.setState({ modal: true });\r\n\r\n  closeModal = () => this.setState({ modal: false });\r\n\r\n  dropdownOptions = () => [\r\n    {\r\n      key: \"user\",\r\n      text: (\r\n        <span>\r\n          Signed in as <strong>{this.state.user.displayName}</strong>\r\n        </span>\r\n      ),\r\n      disabled: true,\r\n    },\r\n    {\r\n      key: \"avatar\",\r\n      text: <span onClick={this.openModal}>Change Avatar</span>,\r\n    },\r\n    {\r\n      key: \"signout\",\r\n      text: <span onClick={this.handleSignout}>Sign Out</span>,\r\n    },\r\n  ];\r\n\r\n  uploadCroppedImage = () => {\r\n    const { storageRef, userRef, blob, metadata } = this.state;\r\n\r\n    storageRef\r\n      .child(`avatars/users/${userRef.uid}`)\r\n      .put(blob, metadata)\r\n      .then((snap) => {\r\n        snap.ref.getDownloadURL().then((downloadURL) => {\r\n          this.setState({ uploadedCroppedImage: downloadURL }, () =>\r\n            this.changeAvatar()\r\n          );\r\n        });\r\n      });\r\n  };\r\n\r\n  changeAvatar = () => {\r\n    this.state.userRef\r\n      .updateProfile({\r\n        photoURL: this.state.uploadedCroppedImage,\r\n      })\r\n      .then(() => {\r\n        console.log(\"PhotoURL updated\");\r\n        this.closeModal();\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n\r\n    this.state.usersRef\r\n      .child(this.state.user.uid)\r\n      .update({ avatar: this.state.uploadedCroppedImage })\r\n      .then(() => {\r\n        console.log(\"User avatar updated\");\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n      reader.addEventListener(\"load\", () => {\r\n        this.setState({ previewImage: reader.result });\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCropImage = () => {\r\n    if (this.avatarEditor) {\r\n      this.avatarEditor.getImageScaledToCanvas().toBlob((blob) => {\r\n        let imageUrl = URL.createObjectURL(blob);\r\n        this.setState({\r\n          croppedImage: imageUrl,\r\n          blob,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSignout = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => console.log(\"signed out!\"));\r\n  };\r\n\r\n  render() {\r\n    const { user, modal, previewImage, croppedImage } = this.state;\r\n    const { primaryColor } = this.props;\r\n\r\n    return (\r\n      <Grid style={{ background: primaryColor }}>\r\n        <Grid.Column>\r\n          <Grid.Row style={{ padding: \"1.2em\", margin: 0 }}>\r\n            {/* App Header */}\r\n            <Header inverted floated=\"left\" as=\"h2\">\r\n              <Icon name=\"code\" />\r\n              <Header.Content>DevChat</Header.Content>\r\n            </Header>\r\n\r\n            {/* User Dropdown  */}\r\n            <Header style={{ padding: \"0.25em\" }} as=\"h4\" inverted>\r\n              <Dropdown\r\n                trigger={\r\n                  <span>\r\n                    <Image src={user.photoURL} spaced=\"right\" avatar />\r\n                    {user.displayName}\r\n                  </span>\r\n                }\r\n                options={this.dropdownOptions()}\r\n              />\r\n            </Header>\r\n          </Grid.Row>\r\n\r\n          {/* Change User Avatar Modal   */}\r\n          <Modal basic open={modal} onClose={this.closeModal}>\r\n            <Modal.Header>Change Avatar</Modal.Header>\r\n            <Modal.Content>\r\n              <Input\r\n                onChange={this.handleChange}\r\n                fluid\r\n                type=\"file\"\r\n                label=\"New Avatar\"\r\n                name=\"previewImage\"\r\n              />\r\n              <Grid centered stackable columns={2}>\r\n                <Grid.Row centered>\r\n                  <Grid.Column className=\"ui center aligned grid\">\r\n                    {previewImage && (\r\n                      <AvatarEditor\r\n                        ref={(node) => (this.avatarEditor = node)}\r\n                        image={previewImage}\r\n                        width={120}\r\n                        height={120}\r\n                        border={50}\r\n                        scale={1.2}\r\n                      />\r\n                    )}\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    {croppedImage && (\r\n                      <Image\r\n                        style={{ margin: \"3.5em auto\" }}\r\n                        width={100}\r\n                        height={100}\r\n                        src={croppedImage}\r\n                      />\r\n                    )}\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              {croppedImage && (\r\n                <Button\r\n                  color=\"green\"\r\n                  inverted\r\n                  onClick={this.uploadCroppedImage}\r\n                >\r\n                  <Icon name=\"save\" /> Change Avatar\r\n                </Button>\r\n              )}\r\n              <Button color=\"green\" inverted onClick={this.handleCropImage}>\r\n                <Icon name=\"image\" /> Preview\r\n              </Button>\r\n              <Button color=\"red\" inverted onClick={this.closeModal}>\r\n                <Icon name=\"remove\" /> Cancel\r\n              </Button>\r\n            </Modal.Actions>\r\n          </Modal>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserPanel;\r\n","import React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\r\n// prettier-ignore\r\nimport { Menu, Icon, Modal, Form, Input, Button, Label } from \"semantic-ui-react\";\r\n\r\nclass Channels extends React.Component {\r\n  state = {\r\n    activeChannel: \"\",\r\n    user: this.props.currentUser,\r\n    channel: null,\r\n    channels: [],\r\n    channelName: \"\",\r\n    channelDetails: \"\",\r\n    channelsRef: firebase.database().ref(\"channels\"),\r\n    messagesRef: firebase.database().ref(\"messages\"),\r\n    typingRef: firebase.database().ref(\"typing\"),\r\n    notifications: [],\r\n    modal: false,\r\n    firstLoad: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.addListeners();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListeners();\r\n  }\r\n\r\n  addListeners = () => {\r\n    let loadedChannels = [];\r\n    this.state.channelsRef.on(\"child_added\", (snap) => {\r\n      loadedChannels.push(snap.val());\r\n      this.setState({ channels: loadedChannels }, () => this.setFirstChannel());\r\n      this.addNotificationListener(snap.key);\r\n    });\r\n  };\r\n\r\n  addNotificationListener = (channelId) => {\r\n    this.state.messagesRef.child(channelId).on(\"value\", (snap) => {\r\n      if (this.state.channel) {\r\n        this.handleNotifications(\r\n          channelId,\r\n          this.state.channel.id,\r\n          this.state.notifications,\r\n          snap\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  handleNotifications = (channelId, currentChannelId, notifications, snap) => {\r\n    let lastTotal = 0;\r\n\r\n    let index = notifications.findIndex(\r\n      (notification) => notification.id === channelId\r\n    );\r\n\r\n    if (index !== -1) {\r\n      if (channelId !== currentChannelId) {\r\n        lastTotal = notifications[index].total;\r\n\r\n        if (snap.numChildren() - lastTotal > 0) {\r\n          notifications[index].count = snap.numChildren() - lastTotal;\r\n        }\r\n      }\r\n      notifications[index].lastKnownTotal = snap.numChildren();\r\n    } else {\r\n      notifications.push({\r\n        id: channelId,\r\n        total: snap.numChildren(),\r\n        lastKnownTotal: snap.numChildren(),\r\n        count: 0,\r\n      });\r\n    }\r\n\r\n    this.setState({ notifications });\r\n  };\r\n\r\n  removeListeners = () => {\r\n    this.state.channelsRef.off();\r\n    this.state.channels.forEach((channel) => {\r\n      this.state.messagesRef.child(channel.id).off();\r\n    });\r\n  };\r\n\r\n  setFirstChannel = () => {\r\n    const firstChannel = this.state.channels[0];\r\n    if (this.state.firstLoad && this.state.channels.length > 0) {\r\n      this.props.setCurrentChannel(firstChannel);\r\n      this.setActiveChannel(firstChannel);\r\n      this.setState({ channel: firstChannel });\r\n    }\r\n    this.setState({ firstLoad: false });\r\n  };\r\n\r\n  addChannel = () => {\r\n    const { channelsRef, channelName, channelDetails, user } = this.state;\r\n\r\n    const key = channelsRef.push().key;\r\n\r\n    const newChannel = {\r\n      id: key,\r\n      name: channelName,\r\n      details: channelDetails,\r\n      createdBy: {\r\n        name: user.displayName,\r\n        avatar: user.photoURL,\r\n      },\r\n    };\r\n\r\n    channelsRef\r\n      .child(key)\r\n      .update(newChannel)\r\n      .then(() => {\r\n        this.setState({ channelName: \"\", channelDetails: \"\" });\r\n        this.closeModal();\r\n        console.log(\"channel added\");\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.isFormValid(this.state)) {\r\n      this.addChannel();\r\n    }\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  changeChannel = (channel) => {\r\n    this.setActiveChannel(channel);\r\n    this.state.typingRef\r\n      .child(this.state.channel.id)\r\n      .child(this.state.user.uid)\r\n      .remove();\r\n    this.clearNotifications();\r\n    this.props.setCurrentChannel(channel);\r\n    this.props.setPrivateChannel(false);\r\n    this.setState({ channel });\r\n  };\r\n\r\n  clearNotifications = () => {\r\n    let index = this.state.notifications.findIndex(\r\n      (notification) => notification.id === this.state.channel.id\r\n    );\r\n\r\n    if (index !== -1) {\r\n      let updatedNotifications = [...this.state.notifications];\r\n      updatedNotifications[index].total = this.state.notifications[\r\n        index\r\n      ].lastKnownTotal;\r\n      updatedNotifications[index].count = 0;\r\n      this.setState({ notifications: updatedNotifications });\r\n    }\r\n  };\r\n\r\n  setActiveChannel = (channel) => {\r\n    this.setState({ activeChannel: channel.id });\r\n  };\r\n\r\n  getNotificationCount = (channel) => {\r\n    let count = 0;\r\n\r\n    this.state.notifications.forEach((notification) => {\r\n      if (notification.id === channel.id) {\r\n        count = notification.count;\r\n      }\r\n    });\r\n\r\n    if (count > 0) return count;\r\n  };\r\n\r\n  displayChannels = (channels) =>\r\n    channels.length > 0 &&\r\n    channels.map((channel) => (\r\n      <Menu.Item\r\n        key={channel.id}\r\n        onClick={() => this.changeChannel(channel)}\r\n        name={channel.name}\r\n        style={{ opacity: 0.7 }}\r\n        active={channel.id === this.state.activeChannel}\r\n      >\r\n        {this.getNotificationCount(channel) && (\r\n          <Label color=\"red\">{this.getNotificationCount(channel)}</Label>\r\n        )}\r\n        # {channel.name}\r\n      </Menu.Item>\r\n    ));\r\n\r\n  isFormValid = ({ channelName, channelDetails }) =>\r\n    channelName && channelDetails;\r\n\r\n  openModal = () => this.setState({ modal: true });\r\n\r\n  closeModal = () => this.setState({ modal: false });\r\n\r\n  render() {\r\n    const { channels, modal } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Menu.Menu className=\"menu\">\r\n          <Menu.Item>\r\n            <span>\r\n              <Icon name=\"exchange\" /> CHANNELS\r\n            </span>{\" \"}\r\n            ({channels.length}) <Icon name=\"add\" onClick={this.openModal} />\r\n          </Menu.Item>\r\n          {this.displayChannels(channels)}\r\n        </Menu.Menu>\r\n\r\n        {/* Add Channel Modal */}\r\n        <Modal basic open={modal} onClose={this.closeModal}>\r\n          <Modal.Header>Add a Channel</Modal.Header>\r\n          <Modal.Content>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Form.Field>\r\n                <Input\r\n                  fluid\r\n                  label=\"Name of Channel\"\r\n                  name=\"channelName\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <Input\r\n                  fluid\r\n                  label=\"About the Channel\"\r\n                  name=\"channelDetails\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n\r\n          <Modal.Actions>\r\n            <Button color=\"green\" inverted onClick={this.handleSubmit}>\r\n              <Icon name=\"checkmark\" /> Add\r\n            </Button>\r\n            <Button color=\"red\" inverted onClick={this.closeModal}>\r\n              <Icon name=\"remove\" /> Cancel\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { setCurrentChannel, setPrivateChannel })(\r\n  Channels\r\n);\r\n","import React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\r\nimport { Menu, Icon } from \"semantic-ui-react\";\r\n\r\nclass DirectMessages extends React.Component {\r\n  state = {\r\n    activeChannel: \"\",\r\n    user: this.props.currentUser,\r\n    users: [],\r\n    usersRef: firebase.database().ref(\"users\"),\r\n    connectedRef: firebase.database().ref(\".info/connected\"),\r\n    presenceRef: firebase.database().ref(\"presence\"),\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.state.user) {\r\n      this.addListeners(this.state.user.uid);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListeners();\r\n  }\r\n\r\n  removeListeners = () => {\r\n    this.state.usersRef.off();\r\n    this.state.presenceRef.off();\r\n    this.state.connectedRef.off();\r\n  };\r\n\r\n  addListeners = (currentUserUid) => {\r\n    let loadedUsers = [];\r\n    this.state.usersRef.on(\"child_added\", (snap) => {\r\n      if (currentUserUid !== snap.key) {\r\n        let user = snap.val();\r\n        user[\"uid\"] = snap.key;\r\n        user[\"status\"] = \"offline\";\r\n        loadedUsers.push(user);\r\n        this.setState({ users: loadedUsers });\r\n      }\r\n    });\r\n\r\n    this.state.connectedRef.on(\"value\", (snap) => {\r\n      if (snap.val() === true) {\r\n        const ref = this.state.presenceRef.child(currentUserUid);\r\n        ref.set(true);\r\n        ref.onDisconnect().remove((err) => {\r\n          if (err !== null) {\r\n            console.error(err);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    this.state.presenceRef.on(\"child_added\", (snap) => {\r\n      if (currentUserUid !== snap.key) {\r\n        this.addStatusToUser(snap.key);\r\n      }\r\n    });\r\n\r\n    this.state.presenceRef.on(\"child_removed\", (snap) => {\r\n      if (currentUserUid !== snap.key) {\r\n        this.addStatusToUser(snap.key, false);\r\n      }\r\n    });\r\n  };\r\n\r\n  addStatusToUser = (userId, connected = true) => {\r\n    const updatedUsers = this.state.users.reduce((acc, user) => {\r\n      if (user.uid === userId) {\r\n        user[\"status\"] = `${connected ? \"online\" : \"offline\"}`;\r\n      }\r\n      return acc.concat(user);\r\n    }, []);\r\n    this.setState({ users: updatedUsers });\r\n  };\r\n\r\n  isUserOnline = (user) => user.status === \"online\";\r\n\r\n  changeChannel = (user) => {\r\n    const channelId = this.getChannelId(user.uid);\r\n    const channelData = {\r\n      id: channelId,\r\n      name: user.name,\r\n    };\r\n    this.props.setCurrentChannel(channelData);\r\n    this.props.setPrivateChannel(true);\r\n    this.setActiveChannel(user.uid);\r\n  };\r\n\r\n  getChannelId = (userId) => {\r\n    const currentUserId = this.state.user.uid;\r\n    return userId < currentUserId\r\n      ? `${userId}/${currentUserId}`\r\n      : `${currentUserId}/${userId}`;\r\n  };\r\n\r\n  setActiveChannel = (userId) => {\r\n    this.setState({ activeChannel: userId });\r\n  };\r\n\r\n  render() {\r\n    const { users, activeChannel } = this.state;\r\n\r\n    return (\r\n      <Menu.Menu className=\"menu\">\r\n        <Menu.Item>\r\n          <span>\r\n            <Icon name=\"mail\" /> DIRECT MESSAGES\r\n          </span>{\" \"}\r\n          ({users.length})\r\n        </Menu.Item>\r\n        {users.map((user) => (\r\n          <Menu.Item\r\n            key={user.uid}\r\n            active={user.uid === activeChannel}\r\n            onClick={() => this.changeChannel(user)}\r\n            style={{ opacity: 0.7, fontStyle: \"italic\" }}\r\n          >\r\n            <Icon\r\n              name=\"circle\"\r\n              color={this.isUserOnline(user) ? \"green\" : \"red\"}\r\n            />\r\n            @ {user.name}\r\n          </Menu.Item>\r\n        ))}\r\n      </Menu.Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { setCurrentChannel, setPrivateChannel })(\r\n  DirectMessages\r\n);\r\n","import React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\r\nimport { Menu, Icon } from \"semantic-ui-react\";\r\n\r\nclass Starred extends React.Component {\r\n  state = {\r\n    user: this.props.currentUser,\r\n    usersRef: firebase.database().ref(\"users\"),\r\n    activeChannel: \"\",\r\n    starredChannels: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.state.user) {\r\n      this.addListeners(this.state.user.uid);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListener();\r\n  }\r\n\r\n  removeListener = () => {\r\n    this.state.usersRef.child(`${this.state.user.uid}/starred`).off();\r\n  };\r\n\r\n  addListeners = (userId) => {\r\n    this.state.usersRef\r\n      .child(userId)\r\n      .child(\"starred\")\r\n      .on(\"child_added\", (snap) => {\r\n        const starredChannel = { id: snap.key, ...snap.val() };\r\n        this.setState({\r\n          starredChannels: [...this.state.starredChannels, starredChannel],\r\n        });\r\n      });\r\n\r\n    this.state.usersRef\r\n      .child(userId)\r\n      .child(\"starred\")\r\n      .on(\"child_removed\", (snap) => {\r\n        const channelToRemove = { id: snap.key, ...snap.val() };\r\n        const filteredChannels = this.state.starredChannels.filter(\r\n          (channel) => {\r\n            return channel.id !== channelToRemove.id;\r\n          }\r\n        );\r\n        this.setState({ starredChannels: filteredChannels });\r\n      });\r\n  };\r\n\r\n  setActiveChannel = (channel) => {\r\n    this.setState({ activeChannel: channel.id });\r\n  };\r\n\r\n  changeChannel = (channel) => {\r\n    this.setActiveChannel(channel);\r\n    this.props.setCurrentChannel(channel);\r\n    this.props.setPrivateChannel(false);\r\n  };\r\n\r\n  displayChannels = (starredChannels) =>\r\n    starredChannels.length > 0 &&\r\n    starredChannels.map((channel) => (\r\n      <Menu.Item\r\n        key={channel.id}\r\n        onClick={() => this.changeChannel(channel)}\r\n        name={channel.name}\r\n        style={{ opacity: 0.7 }}\r\n        active={channel.id === this.state.activeChannel}\r\n      >\r\n        # {channel.name}\r\n      </Menu.Item>\r\n    ));\r\n\r\n  render() {\r\n    const { starredChannels } = this.state;\r\n\r\n    return (\r\n      <Menu.Menu className=\"menu\">\r\n        <Menu.Item>\r\n          <span>\r\n            <Icon name=\"star\" /> STARRED\r\n          </span>{\" \"}\r\n          ({starredChannels.length})\r\n        </Menu.Item>\r\n        {this.displayChannels(starredChannels)}\r\n      </Menu.Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { setCurrentChannel, setPrivateChannel })(Starred);\r\n","import React from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\n\r\nimport UserPanel from \"./UserPanel\";\r\nimport Channels from \"./Channels\";\r\nimport DirectMessages from \"./DirectMessages\";\r\nimport Starred from \"./Starred\";\r\n\r\nclass SidePanel extends React.Component {\r\n  render() {\r\n    const { currentUser, primaryColor } = this.props;\r\n\r\n    return (\r\n      <Menu\r\n        size=\"large\"\r\n        inverted\r\n        fixed=\"left\"\r\n        vertical\r\n        style={{ background: primaryColor, fontSize: \"1.2rem\" }}\r\n      >\r\n        <UserPanel primaryColor={primaryColor} currentUser={currentUser} />\r\n        <Starred currentUser={currentUser} />\r\n        <Channels currentUser={currentUser} />\r\n        <DirectMessages currentUser={currentUser} />\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SidePanel;\r\n","import React from \"react\";\r\nimport { Header, Segment, Input, Icon } from \"semantic-ui-react\";\r\n\r\nclass MessagesHeader extends React.Component {\r\n  render() {\r\n    const {\r\n      channelName,\r\n      numUniqueUsers,\r\n      handleSearchChange,\r\n      searchLoading,\r\n      isPrivateChannel,\r\n      handleStar,\r\n      isChannelStarred,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Segment clearing>\r\n        {/* Channel Title */}\r\n        <Header fluid=\"true\" as=\"h2\" floated=\"left\" style={{ marginBottom: 0 }}>\r\n          <span>\r\n            {channelName}\r\n            {!isPrivateChannel && (\r\n              <Icon\r\n                onClick={handleStar}\r\n                name={isChannelStarred ? \"star\" : \"star outline\"}\r\n                color={isChannelStarred ? \"yellow\" : \"black\"}\r\n              />\r\n            )}\r\n          </span>\r\n          <Header.Subheader>{numUniqueUsers}</Header.Subheader>\r\n        </Header>\r\n\r\n        {/* Channel Search Input */}\r\n        <Header floated=\"right\">\r\n          <Input\r\n            loading={searchLoading}\r\n            onChange={handleSearchChange}\r\n            size=\"mini\"\r\n            icon=\"search\"\r\n            name=\"searchTerm\"\r\n            placeholder=\"Search Messages\"\r\n          />\r\n        </Header>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessagesHeader;\r\n","import React from \"react\";\r\nimport mime from \"mime-types\";\r\nimport { Modal, Input, Button, Icon } from \"semantic-ui-react\";\r\n\r\nclass FileModal extends React.Component {\r\n  state = {\r\n    file: null,\r\n    authorized: [\"image/jpeg\", \"image/png\"],\r\n  };\r\n\r\n  addFile = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      this.setState({ file });\r\n    }\r\n  };\r\n\r\n  sendFile = () => {\r\n    const { file } = this.state;\r\n    const { uploadFile, closeModal } = this.props;\r\n\r\n    if (file !== null) {\r\n      if (this.isAuthorized(file.name)) {\r\n        const metadata = { contentType: mime.lookup(file.name) };\r\n        uploadFile(file, metadata);\r\n        closeModal();\r\n        this.clearFile();\r\n      }\r\n    }\r\n  };\r\n\r\n  isAuthorized = (filename) =>\r\n    this.state.authorized.includes(mime.lookup(filename));\r\n\r\n  clearFile = () => this.setState({ file: null });\r\n\r\n  render() {\r\n    const { modal, closeModal } = this.props;\r\n\r\n    return (\r\n      <Modal basic open={modal} onClose={closeModal}>\r\n        <Modal.Header>Select an Image File</Modal.Header>\r\n        <Modal.Content>\r\n          <Input\r\n            onChange={this.addFile}\r\n            fluid\r\n            label=\"File types: jpg, png\"\r\n            name=\"file\"\r\n            type=\"file\"\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button onClick={this.sendFile} color=\"green\" inverted>\r\n            <Icon name=\"checkmark\" /> Send\r\n          </Button>\r\n          <Button color=\"red\" inverted onClick={closeModal}>\r\n            <Icon name=\"remove\" /> Cancel\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileModal;\r\n","import React from \"react\";\r\nimport { Progress } from \"semantic-ui-react\";\r\n\r\nconst ProgressBar = ({ uploadState, percentUploaded }) =>\r\n  uploadState === \"uploading\" && (\r\n    <Progress\r\n      className=\"progress__bar\"\r\n      percent={percentUploaded}\r\n      progress\r\n      indicating\r\n      size=\"medium\"\r\n      inverted\r\n    />\r\n  );\r\n\r\nexport default ProgressBar;\r\n","import React from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport firebase from \"../../firebase\";\r\nimport { Segment, Button, Input } from \"semantic-ui-react\";\r\nimport { Picker, emojiIndex } from \"emoji-mart\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\n\r\nimport FileModal from \"./FileModal\";\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nclass MessageForm extends React.Component {\r\n  state = {\r\n    storageRef: firebase.storage().ref(),\r\n    typingRef: firebase.database().ref(\"typing\"),\r\n    uploadTask: null,\r\n    uploadState: \"\",\r\n    percentUploaded: 0,\r\n    message: \"\",\r\n    channel: this.props.currentChannel,\r\n    user: this.props.currentUser,\r\n    loading: false,\r\n    errors: [],\r\n    modal: false,\r\n    emojiPicker: false,\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.uploadTask !== null) {\r\n      this.state.uploadTask.cancel();\r\n      this.setState({ uploadTask: null });\r\n    }\r\n  }\r\n\r\n  openModal = () => this.setState({ modal: true });\r\n\r\n  closeModal = () => this.setState({ modal: false });\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleKeyDown = (event) => {\r\n    if (event.keyCode === 13) {\r\n      this.sendMessage();\r\n    }\r\n\r\n    const { message, typingRef, channel, user } = this.state;\r\n\r\n    if (message) {\r\n      typingRef.child(channel.id).child(user.uid).set(user.displayName);\r\n    } else {\r\n      typingRef.child(channel.id).child(user.uid).remove();\r\n    }\r\n  };\r\n\r\n  handleTogglePicker = () => {\r\n    this.setState({ emojiPicker: !this.state.emojiPicker });\r\n  };\r\n\r\n  handleAddEmoji = (emoji) => {\r\n    const oldMessage = this.state.message;\r\n    const newMessage = this.colonToUnicode(` ${oldMessage} ${emoji.colons} `);\r\n    this.setState({ message: newMessage, emojiPicker: false });\r\n    setTimeout(() => this.messageInputRef.focus(), 0);\r\n  };\r\n\r\n  colonToUnicode = (message) => {\r\n    return message.replace(/:[A-Za-z0-9_+-]+:/g, (x) => {\r\n      x = x.replace(/:/g, \"\");\r\n      let emoji = emojiIndex.emojis[x];\r\n      if (typeof emoji !== \"undefined\") {\r\n        let unicode = emoji.native;\r\n        if (typeof unicode !== \"undefined\") {\r\n          return unicode;\r\n        }\r\n      }\r\n      x = \":\" + x + \":\";\r\n      return x;\r\n    });\r\n  };\r\n\r\n  createMessage = (fileUrl = null) => {\r\n    const message = {\r\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\r\n      user: {\r\n        id: this.state.user.uid,\r\n        name: this.state.user.displayName,\r\n        avatar: this.state.user.photoURL,\r\n      },\r\n    };\r\n    if (fileUrl !== null) {\r\n      message[\"image\"] = fileUrl;\r\n    } else {\r\n      message[\"content\"] = this.state.message;\r\n    }\r\n    return message;\r\n  };\r\n\r\n  sendMessage = () => {\r\n    const { getMessagesRef } = this.props;\r\n    const { message, channel, user, typingRef } = this.state;\r\n\r\n    if (message) {\r\n      this.setState({ loading: true });\r\n      getMessagesRef()\r\n        .child(channel.id)\r\n        .push()\r\n        .set(this.createMessage())\r\n        .then(() => {\r\n          this.setState({ loading: false, message: \"\", errors: [] });\r\n          typingRef.child(channel.id).child(user.uid).remove();\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n          this.setState({\r\n            loading: false,\r\n            errors: this.state.errors.concat(err),\r\n          });\r\n        });\r\n    } else {\r\n      this.setState({\r\n        errors: this.state.errors.concat({ message: \"Add a message\" }),\r\n      });\r\n    }\r\n  };\r\n\r\n  getPath = () => {\r\n    if (this.props.isPrivateChannel) {\r\n      return `chat/private/${this.state.channel.id}`;\r\n    } else {\r\n      return \"chat/public\";\r\n    }\r\n  };\r\n\r\n  uploadFile = (file, metadata) => {\r\n    const pathToUpload = this.state.channel.id;\r\n    const ref = this.props.getMessagesRef();\r\n    const filePath = `${this.getPath()}/${uuid()}.jpg`;\r\n\r\n    this.setState(\r\n      {\r\n        uploadState: \"uploading\",\r\n        uploadTask: this.state.storageRef.child(filePath).put(file, metadata),\r\n      },\r\n      () => {\r\n        this.state.uploadTask.on(\r\n          \"state_changed\",\r\n          (snap) => {\r\n            const percentUploaded = Math.round(\r\n              (snap.bytesTransferred / snap.totalBytes) * 100\r\n            );\r\n            this.setState({ percentUploaded });\r\n          },\r\n          (err) => {\r\n            console.error(err);\r\n            this.setState({\r\n              errors: this.state.errors.concat(err),\r\n              uploadState: \"error\",\r\n              uploadTask: null,\r\n            });\r\n          },\r\n          () => {\r\n            this.state.uploadTask.snapshot.ref\r\n              .getDownloadURL()\r\n              .then((downloadUrl) => {\r\n                this.sendFileMessage(downloadUrl, ref, pathToUpload);\r\n              })\r\n              .catch((err) => {\r\n                console.error(err);\r\n                this.setState({\r\n                  errors: this.state.errors.concat(err),\r\n                  uploadState: \"error\",\r\n                  uploadTask: null,\r\n                });\r\n              });\r\n          }\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  sendFileMessage = (fileUrl, ref, pathToUpload) => {\r\n    ref\r\n      .child(pathToUpload)\r\n      .push()\r\n      .set(this.createMessage(fileUrl))\r\n      .then(() => {\r\n        this.setState({ uploadState: \"done\" });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        this.setState({\r\n          errors: this.state.errors.concat(err),\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    // prettier-ignore\r\n    const { errors, message, loading, modal, uploadState, percentUploaded, emojiPicker } = this.state;\r\n\r\n    return (\r\n      <Segment className=\"message__form\">\r\n        {emojiPicker && (\r\n          <Picker\r\n            set=\"apple\"\r\n            onSelect={this.handleAddEmoji}\r\n            className=\"emojipicker\"\r\n            title=\"Pick your emoji\"\r\n            emoji=\"point_up\"\r\n          />\r\n        )}\r\n        <Input\r\n          fluid\r\n          name=\"message\"\r\n          onChange={this.handleChange}\r\n          onKeyDown={this.handleKeyDown}\r\n          value={message}\r\n          ref={(node) => (this.messageInputRef = node)}\r\n          style={{ marginBottom: \"0.7em\" }}\r\n          label={\r\n            <Button\r\n              icon={emojiPicker ? \"close\" : \"add\"}\r\n              content={emojiPicker ? \"Close\" : null}\r\n              onClick={this.handleTogglePicker}\r\n            />\r\n          }\r\n          labelPosition=\"left\"\r\n          className={\r\n            errors.some((error) => error.message.includes(\"message\"))\r\n              ? \"error\"\r\n              : \"\"\r\n          }\r\n          placeholder=\"Write your message\"\r\n        />\r\n        <Button.Group icon widths=\"2\">\r\n          <Button\r\n            onClick={this.sendMessage}\r\n            disabled={loading}\r\n            color=\"orange\"\r\n            content=\"Add Reply\"\r\n            labelPosition=\"left\"\r\n            icon=\"edit\"\r\n          />\r\n          <Button\r\n            color=\"teal\"\r\n            disabled={uploadState === \"uploading\"}\r\n            onClick={this.openModal}\r\n            content=\"Upload Media\"\r\n            labelPosition=\"right\"\r\n            icon=\"cloud upload\"\r\n          />\r\n        </Button.Group>\r\n        <FileModal\r\n          modal={modal}\r\n          closeModal={this.closeModal}\r\n          uploadFile={this.uploadFile}\r\n        />\r\n        <ProgressBar\r\n          uploadState={uploadState}\r\n          percentUploaded={percentUploaded}\r\n        />\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageForm;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Comment, Image } from \"semantic-ui-react\";\r\n\r\nconst isOwnMessage = (message, user) => {\r\n  return message.user.id === user.uid ? \"message__self\" : \"\";\r\n};\r\n\r\nconst isImage = (message) => {\r\n  return message.hasOwnProperty(\"image\") && !message.hasOwnProperty(\"content\");\r\n};\r\n\r\nconst timeFromNow = (timestamp) => moment(timestamp).fromNow();\r\n\r\nconst Message = ({ message, user }) => (\r\n  <Comment>\r\n    <Comment.Avatar src={message.user.avatar} />\r\n    <Comment.Content className={isOwnMessage(message, user)}>\r\n      <Comment.Author as=\"a\">{message.user.name}</Comment.Author>\r\n      <Comment.Metadata>{timeFromNow(message.timestamp)}</Comment.Metadata>\r\n      {isImage(message) ? (\r\n        <Image src={message.image} className=\"message__image\" />\r\n      ) : (\r\n        <Comment.Text>{message.content}</Comment.Text>\r\n      )}\r\n    </Comment.Content>\r\n  </Comment>\r\n);\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\n\r\nconst Typing = () => (\r\n  <div className=\"typing\">\r\n    <div className=\"typing__dot\"></div>\r\n    <div className=\"typing__dot\"></div>\r\n    <div className=\"typing__dot\"></div>\r\n  </div>\r\n);\r\n\r\nexport default Typing;\r\n","import React from \"react\";\r\n\r\nconst Skeleton = () => (\r\n  <div className=\"skeleton\">\r\n    <div className=\"skeleton__avatar\" />\r\n    <div className=\"skeleton__author\" />\r\n    <div className=\"skeleton__details\" />\r\n  </div>\r\n);\r\n\r\nexport default Skeleton;\r\n","import React from \"react\";\r\nimport { Segment, Comment } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setUserPosts } from \"../../actions\";\r\nimport firebase from \"../../firebase\";\r\n\r\nimport MessagesHeader from \"./MessagesHeader\";\r\nimport MessageForm from \"./MessageForm\";\r\nimport Message from \"./Message\";\r\nimport Typing from \"./Typing\";\r\nimport Skeleton from \"./Skeleton\";\r\n\r\nclass Messages extends React.Component {\r\n  state = {\r\n    privateChannel: this.props.isPrivateChannel,\r\n    privateMessagesRef: firebase.database().ref(\"privateMessages\"),\r\n    messagesRef: firebase.database().ref(\"messages\"),\r\n    messages: [],\r\n    messagesLoading: true,\r\n    channel: this.props.currentChannel,\r\n    isChannelStarred: false,\r\n    user: this.props.currentUser,\r\n    usersRef: firebase.database().ref(\"users\"),\r\n    numUniqueUsers: \"\",\r\n    searchTerm: \"\",\r\n    searchLoading: false,\r\n    searchResults: [],\r\n    typingRef: firebase.database().ref(\"typing\"),\r\n    typingUsers: [],\r\n    connectedRef: firebase.database().ref(\".info/connected\"),\r\n    listeners: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { channel, user, listeners } = this.state;\r\n\r\n    if (channel && user) {\r\n      this.removeListeners(listeners);\r\n      this.addListeners(channel.id);\r\n      this.addUserStarsListener(channel.id, user.uid);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListeners(this.state.listeners);\r\n    this.state.connectedRef.off();\r\n  }\r\n\r\n  removeListeners = (listeners) => {\r\n    listeners.forEach((listener) => {\r\n      listener.ref.child(listener.id).off(listener.event);\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.messagesEnd) {\r\n      this.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  addToListeners = (id, ref, event) => {\r\n    const index = this.state.listeners.findIndex((listener) => {\r\n      return (\r\n        listener.id === id && listener.ref === ref && listener.event === event\r\n      );\r\n    });\r\n\r\n    if (index === -1) {\r\n      const newListener = { id, ref, event };\r\n      this.setState({ listeners: this.state.listeners.concat(newListener) });\r\n    }\r\n  };\r\n\r\n  scrollToBottom = () => {\r\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  addListeners = (channelId) => {\r\n    this.addMessageListener(channelId);\r\n    this.addTypingListeners(channelId);\r\n  };\r\n\r\n  addTypingListeners = (channelId) => {\r\n    let typingUsers = [];\r\n    this.state.typingRef.child(channelId).on(\"child_added\", (snap) => {\r\n      if (snap.key !== this.state.user.uid) {\r\n        typingUsers = typingUsers.concat({\r\n          id: snap.key,\r\n          name: snap.val(),\r\n        });\r\n        this.setState({ typingUsers });\r\n      }\r\n    });\r\n    this.addToListeners(channelId, this.state.typingRef, \"child_added\");\r\n\r\n    this.state.typingRef.child(channelId).on(\"child_removed\", (snap) => {\r\n      const index = typingUsers.findIndex((user) => user.id === snap.key);\r\n      if (index !== -1) {\r\n        typingUsers = typingUsers.filter((user) => user.id !== snap.key);\r\n        this.setState({ typingUsers });\r\n      }\r\n    });\r\n    this.addToListeners(channelId, this.state.typingRef, \"child_removed\");\r\n\r\n    this.state.connectedRef.on(\"value\", (snap) => {\r\n      if (snap.val() === true) {\r\n        this.state.typingRef\r\n          .child(channelId)\r\n          .child(this.state.user.uid)\r\n          .onDisconnect()\r\n          .remove((err) => {\r\n            if (err !== null) {\r\n              console.error(err);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  addMessageListener = (channelId) => {\r\n    let loadedMessages = [];\r\n    const ref = this.getMessagesRef();\r\n    ref.child(channelId).on(\"child_added\", (snap) => {\r\n      loadedMessages.push(snap.val());\r\n      this.setState({\r\n        messages: loadedMessages,\r\n        messagesLoading: false,\r\n      });\r\n      this.countUniqueUsers(loadedMessages);\r\n      this.countUserPosts(loadedMessages);\r\n    });\r\n    this.addToListeners(channelId, ref, \"child_added\");\r\n  };\r\n\r\n  addUserStarsListener = (channelId, userId) => {\r\n    this.state.usersRef\r\n      .child(userId)\r\n      .child(\"starred\")\r\n      .once(\"value\")\r\n      .then((data) => {\r\n        if (data.val() !== null) {\r\n          const channelIds = Object.keys(data.val());\r\n          const prevStarred = channelIds.includes(channelId);\r\n          this.setState({ isChannelStarred: prevStarred });\r\n        }\r\n      });\r\n  };\r\n\r\n  getMessagesRef = () => {\r\n    const { messagesRef, privateMessagesRef, privateChannel } = this.state;\r\n    return privateChannel ? privateMessagesRef : messagesRef;\r\n  };\r\n\r\n  handleStar = () => {\r\n    this.setState(\r\n      (prevState) => ({\r\n        isChannelStarred: !prevState.isChannelStarred,\r\n      }),\r\n      () => this.starChannel()\r\n    );\r\n  };\r\n\r\n  starChannel = () => {\r\n    if (this.state.isChannelStarred) {\r\n      this.state.usersRef.child(`${this.state.user.uid}/starred`).update({\r\n        [this.state.channel.id]: {\r\n          name: this.state.channel.name,\r\n          details: this.state.channel.details,\r\n          createdBy: {\r\n            name: this.state.channel.createdBy.name,\r\n            avatar: this.state.channel.createdBy.avatar,\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      this.state.usersRef\r\n        .child(`${this.state.user.uid}/starred`)\r\n        .child(this.state.channel.id)\r\n        .remove((err) => {\r\n          if (err !== null) {\r\n            console.error(err);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  handleSearchChange = (event) => {\r\n    this.setState(\r\n      {\r\n        searchTerm: event.target.value,\r\n        searchLoading: true,\r\n      },\r\n      () => this.handleSearchMessages()\r\n    );\r\n  };\r\n\r\n  handleSearchMessages = () => {\r\n    const channelMessages = [...this.state.messages];\r\n    const regex = new RegExp(this.state.searchTerm, \"gi\");\r\n    const searchResults = channelMessages.reduce((acc, message) => {\r\n      if (\r\n        (message.content && message.content.match(regex)) ||\r\n        message.user.name.match(regex)\r\n      ) {\r\n        acc.push(message);\r\n      }\r\n      return acc;\r\n    }, []);\r\n    this.setState({ searchResults });\r\n    setTimeout(() => this.setState({ searchLoading: false }), 1000);\r\n  };\r\n\r\n  countUniqueUsers = (messages) => {\r\n    const uniqueUsers = messages.reduce((acc, message) => {\r\n      if (!acc.includes(message.user.name)) {\r\n        acc.push(message.user.name);\r\n      }\r\n      return acc;\r\n    }, []);\r\n    const plural = uniqueUsers.length > 1 || uniqueUsers.length === 0;\r\n    const numUniqueUsers = `${uniqueUsers.length} user${plural ? \"s\" : \"\"}`;\r\n    this.setState({ numUniqueUsers });\r\n  };\r\n\r\n  countUserPosts = (messages) => {\r\n    let userPosts = messages.reduce((acc, message) => {\r\n      if (message.user.name in acc) {\r\n        acc[message.user.name].count += 1;\r\n      } else {\r\n        acc[message.user.name] = {\r\n          avatar: message.user.avatar,\r\n          count: 1,\r\n        };\r\n      }\r\n      return acc;\r\n    }, {});\r\n    this.props.setUserPosts(userPosts);\r\n  };\r\n\r\n  displayMessages = (messages) =>\r\n    messages.length > 0 &&\r\n    messages.map((message) => (\r\n      <Message\r\n        key={message.timestamp}\r\n        message={message}\r\n        user={this.state.user}\r\n      />\r\n    ));\r\n\r\n  displayChannelName = (channel) => {\r\n    return channel\r\n      ? `${this.state.privateChannel ? \"@\" : \"#\"}${channel.name}`\r\n      : \"\";\r\n  };\r\n\r\n  displayTypingUsers = (users) =>\r\n    users.length > 0 &&\r\n    users.map((user) => (\r\n      <div\r\n        style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"0.2em\" }}\r\n        key={user.id}\r\n      >\r\n        <span className=\"user__typing\">{user.name} is typing</span> <Typing />\r\n      </div>\r\n    ));\r\n\r\n  displayMessageSkeleton = (loading) =>\r\n    loading ? (\r\n      <React.Fragment>\r\n        {[...Array(10)].map((_, i) => (\r\n          <Skeleton key={i} />\r\n        ))}\r\n      </React.Fragment>\r\n    ) : null;\r\n\r\n  render() {\r\n    // prettier-ignore\r\n    const { messagesRef, messages, channel, user, numUniqueUsers, searchTerm, searchResults, searchLoading, privateChannel, isChannelStarred, typingUsers, messagesLoading } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <MessagesHeader\r\n          channelName={this.displayChannelName(channel)}\r\n          numUniqueUsers={numUniqueUsers}\r\n          handleSearchChange={this.handleSearchChange}\r\n          searchLoading={searchLoading}\r\n          isPrivateChannel={privateChannel}\r\n          handleStar={this.handleStar}\r\n          isChannelStarred={isChannelStarred}\r\n        />\r\n\r\n        <Segment>\r\n          <Comment.Group className=\"messages\">\r\n            {this.displayMessageSkeleton(messagesLoading)}\r\n            {searchTerm\r\n              ? this.displayMessages(searchResults)\r\n              : this.displayMessages(messages)}\r\n            {this.displayTypingUsers(typingUsers)}\r\n            <div ref={(node) => (this.messagesEnd = node)} />\r\n          </Comment.Group>\r\n        </Segment>\r\n\r\n        <MessageForm\r\n          messagesRef={messagesRef}\r\n          currentChannel={channel}\r\n          currentUser={user}\r\n          isPrivateChannel={privateChannel}\r\n          getMessagesRef={this.getMessagesRef}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { setUserPosts })(Messages);\r\n","import React from \"react\";\r\nimport {\r\n  Segment,\r\n  Accordion,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  List,\r\n} from \"semantic-ui-react\";\r\n\r\nclass MetaPanel extends React.Component {\r\n  state = {\r\n    channel: this.props.currentChannel,\r\n    privateChannel: this.props.isPrivateChannel,\r\n    activeIndex: 0,\r\n  };\r\n\r\n  setActiveIndex = (event, titleProps) => {\r\n    const { index } = titleProps;\r\n    const { activeIndex } = this.state;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n    this.setState({ activeIndex: newIndex });\r\n  };\r\n\r\n  formatCount = (num) =>\r\n    num > 1 || num === 0 ? `${num} posts` : `${num} post`;\r\n\r\n  displayTopPosters = (posts) =>\r\n    Object.entries(posts)\r\n      .sort((a, b) => b[1] - a[1])\r\n      .map(([key, val], i) => (\r\n        <List.Item key={i}>\r\n          <Image avatar src={val.avatar} />\r\n          <List.Content>\r\n            <List.Header as=\"a\">{key}</List.Header>\r\n            <List.Description>{this.formatCount(val.count)}</List.Description>\r\n          </List.Content>\r\n        </List.Item>\r\n      ))\r\n      .slice(0, 5);\r\n\r\n  render() {\r\n    const { activeIndex, privateChannel, channel } = this.state;\r\n    const { userPosts } = this.props;\r\n\r\n    if (privateChannel) return null;\r\n\r\n    return (\r\n      <Segment loading={!channel}>\r\n        <Header as=\"h3\" attached=\"top\">\r\n          About # {channel && channel.name}\r\n        </Header>\r\n        <Accordion styled attached=\"true\">\r\n          <Accordion.Title\r\n            active={activeIndex === 0}\r\n            index={0}\r\n            onClick={this.setActiveIndex}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            <Icon name=\"info\" />\r\n            Channel Details\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 0}>\r\n            {channel && channel.details}\r\n          </Accordion.Content>\r\n\r\n          <Accordion.Title\r\n            active={activeIndex === 1}\r\n            index={1}\r\n            onClick={this.setActiveIndex}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            <Icon name=\"user circle\" />\r\n            Top Posters\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 1}>\r\n            <List>{userPosts && this.displayTopPosters(userPosts)}</List>\r\n          </Accordion.Content>\r\n\r\n          <Accordion.Title\r\n            active={activeIndex === 2}\r\n            index={2}\r\n            onClick={this.setActiveIndex}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            <Icon name=\"pencil alternate\" />\r\n            Created By\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 2}>\r\n            <Header as=\"h3\">\r\n              <Image circular src={channel && channel.createdBy.avatar} />\r\n              {channel && channel.createdBy.name}\r\n            </Header>\r\n          </Accordion.Content>\r\n        </Accordion>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MetaPanel;\r\n","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport { Jutsu } from \"react-jutsu\";\r\nimport { setBypass } from \"../../actions\";\r\n\r\nimport {\r\n  Grid,\r\n  Form,\r\n  Segment,\r\n  Button,\r\n  Header,\r\n  Message,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\n\r\nconst VideoCalling = ({ history }) => {\r\n  const [room, setRoom] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [call, setCall] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleClick = (event) => {\r\n    event.preventDefault();\r\n    if (room && name) setCall(true);\r\n  };\r\n\r\n  const goBack = () => {\r\n    setBypass(false);\r\n    history.push(\"/\");\r\n    console.log(\"working\", history);\r\n  };\r\n\r\n  return call ? (\r\n    <Jutsu\r\n      roomName={room}\r\n      displayName={name}\r\n      password={password}\r\n      onMeetingEnd={() => goBack()}\r\n      loadingComponent={<p>loading ...</p>}\r\n      containerStyles={{ width: \"100vw\", height: \"100vh\" }}\r\n    />\r\n  ) : (\r\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Header as=\"h1\" icon color=\"blue\" textAlign=\"center\">\r\n          <Icon name=\"video\" color=\"blue\" />\r\n          Enter Room Info\r\n        </Header>\r\n        <Form size=\"large\">\r\n          <Segment stacked>\r\n            <Form.Input\r\n              fluid\r\n              id=\"room\"\r\n              icon=\"warehouse\"\r\n              iconPosition=\"left\"\r\n              placeholder=\"Room\"\r\n              onChange={(e) => setRoom(e.target.value)}\r\n              value={room}\r\n              type=\"text\"\r\n            />\r\n\r\n            <Form.Input\r\n              fluid\r\n              id=\"name\"\r\n              icon=\"user\"\r\n              iconPosition=\"left\"\r\n              placeholder=\"Name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n              value={name}\r\n              type=\"text\"\r\n            />\r\n\r\n            <Form.Input\r\n              fluid\r\n              id=\"password\"\r\n              icon=\"lock\"\r\n              iconPosition=\"left\"\r\n              placeholder=\"Password (optional)\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              value={password}\r\n              type=\"password\"\r\n            />\r\n\r\n            <Button\r\n              color=\"blue\"\r\n              fluid\r\n              size=\"large\"\r\n              onClick={handleClick}\r\n              type=\"submit\"\r\n            >\r\n              Start / Join\r\n            </Button>\r\n          </Segment>\r\n        </Form>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default withRouter(VideoCalling);\r\n","import React from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport \"./App.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { setBypass } from \"../actions\";\r\n\r\nimport ColorPanel from \"./ColorPanel/ColorPanel\";\r\nimport SidePanel from \"./SidePanel/SidePanel\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport MetaPanel from \"./MetaPanel/MetaPanel\";\r\nimport VideoCalling from \"./VideoCalling/VideoCalling\";\r\n\r\nimport { Icon, Header } from \"semantic-ui-react\";\r\n\r\n// prettier-ignore\r\nconst App = ({ currentUser, currentChannel, isPrivateChannel, userPosts, primaryColor, secondaryColor, history }) => {\r\n    const callRoute = () => {\r\n      setBypass(true);\r\n      history.push(\"/video\");\r\n    };\r\n  return (\r\n  <Grid columns=\"equal\" className=\"app\" style={{ background: secondaryColor }}>\r\n    <ColorPanel\r\n      key={currentUser && currentUser.name}\r\n      currentUser={currentUser}\r\n    />\r\n    <SidePanel\r\n      key={currentUser && currentUser.uid}\r\n      currentUser={currentUser}\r\n      primaryColor={primaryColor}\r\n    />\r\n\r\n    <Grid.Column style={{ marginLeft: 320 }}>\r\n      <Messages\r\n        key={currentChannel && currentChannel.id}\r\n        currentChannel={currentChannel}\r\n        currentUser={currentUser}\r\n        isPrivateChannel={isPrivateChannel}\r\n      />\r\n    </Grid.Column>\r\n\r\n    <Grid.Column width={4}>\r\n      <MetaPanel\r\n        key={currentChannel && currentChannel.name}\r\n        userPosts={userPosts}\r\n        currentChannel={currentChannel}\r\n        isPrivateChannel={isPrivateChannel}\r\n      />\r\n      <Header as=\"h2\" onClick={callRoute} className='cursor'>\r\n              <Icon name=\"video\" />\r\n              <Header.Content>Video Calling</Header.Content>\r\n      </Header>\r\n    </Grid.Column>\r\n  </Grid>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentUser: state.user.currentUser,\r\n  currentChannel: state.channel.currentChannel,\r\n  isPrivateChannel: state.channel.isPrivateChannel,\r\n  userPosts: state.channel.userPosts,\r\n  primaryColor: state.colors.primaryColor,\r\n  secondaryColor: state.colors.secondaryColor,\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport {\r\n  Grid,\r\n  Form,\r\n  Segment,\r\n  Button,\r\n  Header,\r\n  Message,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    errors: [],\r\n    loading: false,\r\n  };\r\n\r\n  displayErrors = (errors) =>\r\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.isFormValid(this.state)) {\r\n      this.setState({ errors: [], loading: true });\r\n      firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n        .then((signedInUser) => {\r\n          console.log(signedInUser);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n          this.setState({\r\n            errors: this.state.errors.concat(err),\r\n            loading: false,\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  isFormValid = ({ email, password }) => email && password;\r\n\r\n  handleInputError = (errors, inputName) => {\r\n    return errors.some((error) =>\r\n      error.message.toLowerCase().includes(inputName)\r\n    )\r\n      ? \"error\"\r\n      : \"\";\r\n  };\r\n\r\n  render() {\r\n    const { email, password, errors, loading } = this.state;\r\n\r\n    return (\r\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header as=\"h1\" icon color=\"violet\" textAlign=\"center\">\r\n            <Icon name=\"code branch\" color=\"violet\" />\r\n            Login to DevChat\r\n          </Header>\r\n          <Form onSubmit={this.handleSubmit} size=\"large\">\r\n            <Segment stacked>\r\n              <Form.Input\r\n                fluid\r\n                name=\"email\"\r\n                icon=\"mail\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Email Address\"\r\n                onChange={this.handleChange}\r\n                value={email}\r\n                className={this.handleInputError(errors, \"email\")}\r\n                type=\"email\"\r\n              />\r\n\r\n              <Form.Input\r\n                fluid\r\n                name=\"password\"\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Password\"\r\n                onChange={this.handleChange}\r\n                value={password}\r\n                className={this.handleInputError(errors, \"password\")}\r\n                type=\"password\"\r\n              />\r\n\r\n              <Button\r\n                disabled={loading}\r\n                className={loading ? \"loading\" : \"\"}\r\n                color=\"violet\"\r\n                fluid\r\n                size=\"large\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Segment>\r\n          </Form>\r\n          {errors.length > 0 && (\r\n            <Message error>\r\n              <h3>Error</h3>\r\n              {this.displayErrors(errors)}\r\n            </Message>\r\n          )}\r\n          <Message>\r\n            Don't have an account? <Link to=\"/register\">Register</Link>\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport md5 from \"md5\";\r\nimport {\r\n  Grid,\r\n  Form,\r\n  Segment,\r\n  Button,\r\n  Header,\r\n  Message,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Register extends React.Component {\r\n  state = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordConfirmation: \"\",\r\n    errors: [],\r\n    loading: false,\r\n    usersRef: firebase.database().ref(\"users\"),\r\n  };\r\n\r\n  isFormValid = () => {\r\n    let errors = [];\r\n    let error;\r\n\r\n    if (this.isFormEmpty(this.state)) {\r\n      error = { message: \"Fill in all fields\" };\r\n      this.setState({ errors: errors.concat(error) });\r\n      return false;\r\n    } else if (!this.isPasswordValid(this.state)) {\r\n      error = { message: \"Password is invalid\" };\r\n      this.setState({ errors: errors.concat(error) });\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  isFormEmpty = ({ username, email, password, passwordConfirmation }) => {\r\n    return (\r\n      !username.length ||\r\n      !email.length ||\r\n      !password.length ||\r\n      !passwordConfirmation.length\r\n    );\r\n  };\r\n\r\n  isPasswordValid = ({ password, passwordConfirmation }) => {\r\n    if (password.length < 6 || passwordConfirmation.length < 6) {\r\n      return false;\r\n    } else if (password !== passwordConfirmation) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  displayErrors = (errors) =>\r\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ errors: [], loading: true });\r\n    if (this.isFormValid()) {\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n        .then((createdUser) => {\r\n          console.log(createdUser);\r\n          createdUser.user\r\n            .updateProfile({\r\n              displayName: this.state.username,\r\n              photoURL: `http://gravatar.com/avatar/${md5(\r\n                createdUser.user.email\r\n              )}?d=identicon`,\r\n            })\r\n            .then(() => {\r\n              this.saveUser(createdUser).then(() => {\r\n                console.log(\"user saved\");\r\n              });\r\n              this.setState({ errors: [], loading: false });\r\n            })\r\n            .catch((err) => {\r\n              console.error(err);\r\n              this.setState({\r\n                errors: this.state.errors.concat(err),\r\n                loading: false,\r\n              });\r\n            });\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n          this.setState({\r\n            errors: this.state.errors.concat(err),\r\n            loading: false,\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  saveUser = (createdUser) => {\r\n    return this.state.usersRef.child(createdUser.user.uid).set({\r\n      name: createdUser.user.displayName,\r\n      avatar: createdUser.user.photoURL,\r\n    });\r\n  };\r\n\r\n  handleInputError = (errors, inputName) => {\r\n    return errors.some((error) =>\r\n      error.message.toLowerCase().includes(inputName)\r\n    )\r\n      ? \"error\"\r\n      : \"\";\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      email,\r\n      password,\r\n      passwordConfirmation,\r\n      errors,\r\n      loading,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <Header as=\"h1\" icon color=\"orange\" textAlign=\"center\">\r\n            <Icon name=\"puzzle piece\" color=\"orange\" />\r\n            Register for DevChat\r\n          </Header>\r\n          <Form onSubmit={this.handleSubmit} size=\"large\">\r\n            <Segment stacked>\r\n              <Form.Input\r\n                fluid\r\n                name=\"username\"\r\n                icon=\"user\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Username\"\r\n                onChange={this.handleChange}\r\n                value={username}\r\n                type=\"text\"\r\n              />\r\n\r\n              <Form.Input\r\n                fluid\r\n                name=\"email\"\r\n                icon=\"mail\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Email Address\"\r\n                onChange={this.handleChange}\r\n                value={email}\r\n                className={this.handleInputError(errors, \"email\")}\r\n                type=\"email\"\r\n              />\r\n\r\n              <Form.Input\r\n                fluid\r\n                name=\"password\"\r\n                icon=\"lock\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Password\"\r\n                onChange={this.handleChange}\r\n                value={password}\r\n                className={this.handleInputError(errors, \"password\")}\r\n                type=\"password\"\r\n              />\r\n\r\n              <Form.Input\r\n                fluid\r\n                name=\"passwordConfirmation\"\r\n                icon=\"repeat\"\r\n                iconPosition=\"left\"\r\n                placeholder=\"Password Confirmation\"\r\n                onChange={this.handleChange}\r\n                value={passwordConfirmation}\r\n                className={this.handleInputError(errors, \"password\")}\r\n                type=\"password\"\r\n              />\r\n\r\n              <Button\r\n                disabled={loading}\r\n                className={loading ? \"loading\" : \"\"}\r\n                color=\"orange\"\r\n                fluid\r\n                size=\"large\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Segment>\r\n          </Form>\r\n          {errors.length > 0 && (\r\n            <Message error>\r\n              <h3>Error</h3>\r\n              {this.displayErrors(errors)}\r\n            </Message>\r\n          )}\r\n          <Message>\r\n            Already a user? <Link to=\"/login\">Login</Link>\r\n          </Message>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { Loader, Dimmer } from \"semantic-ui-react\";\r\n\r\nconst Spinner = () => (\r\n  <Dimmer active>\r\n    <Loader size=\"huge\" content={\"Preparing Chat...\"} />\r\n  </Dimmer>\r\n);\r\n\r\nexport default Spinner;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport * as actionTypes from \"../actions/types\";\r\n\r\nconst initialUserState = {\r\n  currentUser: null,\r\n  isLoading: true,\r\n  bypass: false,\r\n};\r\n\r\nconst user_reducer = (state = initialUserState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_USER:\r\n      return {\r\n        currentUser: action.payload.currentUser,\r\n        isLoading: false,\r\n      };\r\n    case actionTypes.CLEAR_USER:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    case actionTypes.SET_BYPASS:\r\n      return {\r\n        ...state,\r\n        bypass: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialChannelState = {\r\n  currentChannel: null,\r\n  isPrivateChannel: false,\r\n  userPosts: null,\r\n};\r\n\r\nconst channel_reducer = (state = initialChannelState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_CURRENT_CHANNEL:\r\n      return {\r\n        ...state,\r\n        currentChannel: action.payload.currentChannel,\r\n      };\r\n    case actionTypes.SET_PRIVATE_CHANNEL:\r\n      return {\r\n        ...state,\r\n        isPrivateChannel: action.payload.isPrivateChannel,\r\n      };\r\n    case actionTypes.SET_USER_POSTS:\r\n      return {\r\n        ...state,\r\n        userPosts: action.payload.userPosts,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialColorsState = {\r\n  primaryColor: \"#4c3c4c\",\r\n  secondaryColor: \"#eee\",\r\n};\r\n\r\nconst colors_reducer = (state = initialColorsState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_COLORS:\r\n      return {\r\n        primaryColor: action.payload.primaryColor,\r\n        secondaryColor: action.payload.secondaryColor,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  user: user_reducer,\r\n  channel: channel_reducer,\r\n  colors: colors_reducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport Login from \"./components/Auth/Login\";\r\nimport Register from \"./components/Auth/Register\";\r\nimport Spinner from \"./Spinner\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport firebase from \"./firebase\";\r\n\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\n\r\nimport { createStore } from \"redux\";\r\nimport { Provider, connect } from \"react-redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./reducers\";\r\nimport { setUser, clearUser } from \"./actions\";\r\nimport VideoCalling from \"./components/VideoCalling/VideoCalling\";\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nclass Root extends React.Component {\r\n  componentDidMount() {\r\n    console.log(\"bypass\", this.props.bypass);\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user && !this.props.bypass) {\r\n        this.props.setUser(user);\r\n        this.props.history.push(\"/\");\r\n      } else {\r\n        this.props.history.push(\"/login\");\r\n        this.props.clearUser();\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return this.props.isLoading ? (\r\n      <Spinner />\r\n    ) : (\r\n      <Switch>\r\n        <Route exact path=\"/\" component={App} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/register\" component={Register} />\r\n        <Route\r\n          path=\"/video\"\r\n          component={() => <VideoCalling bypass={this.props.bypass} />}\r\n        />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateFromProps = (state) => ({\r\n  isLoading: state.user.isLoading,\r\n  bypass: state.user.bypass,\r\n});\r\n\r\nconst RootWithAuth = withRouter(\r\n  connect(mapStateFromProps, { setUser, clearUser })(Root)\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <RootWithAuth />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}