{"version":3,"sources":["actions/types.js","api/urlApi.js","api/api.js","api/treatment.js","api/doctor.js","api/appointment.js","actions/index.js","components/Header.js","components/Main.js","assets/images/loading.png","components/Loading.js","containers/Login.js","containers/Registration.js","components/Error.js","containers/TreatmentList.js","containers/Treatment.js","containers/AppointmentList.js","containers/AppointmentForm.js","components/Routes.js","components/App.js","reducers/appointment.js","reducers/doctor.js","reducers/treatment.js","reducers/user.js","reducers/index.js","index.js"],"names":["FETCH_REQUEST","FETCH_FAILURE","POST_APPOINTMENT_SUCCESS","FETCH_APPOINTMENTS_SUCCESS","FETCH_APPOINTMENT_SUCCESS","SUBMITFORM_RESET","FETCH_TREATMENTS_SUCCESS","FETCH_TREATMENT_SUCCESS","FETCH_DOCTORS_SUCCESS","FETCH_DOCTOR_SUCCESS","POST_USER_SUCCESS","CHECK_SESSION_SUCCESS","LOGOUT_SUCCESS","urlApi","config","withCredentials","headers","postUserApi","state","a","opt","axios","post","user","name","email","password","password_confirmation","response","data","createSessionApi","checkSessionApi","get","logoutApi","delete","getTreatmentListApi","getTreatmentApi","id","getDoctorListApi","postAppointmentApi","datetime","date","time","appointment","completed","doctor_id","doctorID","treatment_id","treatmentID","getAppointmentListApi","fetchRequest","type","fetchFailure","error","payload","postUserSuccess","postAppointment","dispatch","then","catch","message","fetchAppointments","appointments","fetchAppointmentsSuccess","fetchTreatments","treatments","fetchTreatmentsSuccess","fetchTreatment","treatment","fetchTreatmentSuccess","fetchDoctors","doctors","fetchDoctorsSuccess","checkSession","checkSessionSuccess","logout","status","logoutSuccess","Header","className","to","href","target","rel","aria-label","Main","Loading","src","loadingImg","alt","connect","loggedInStatus","loading","props","useState","setState","useDispatch","useEffect","handleChange","useCallback","e","value","handleSubmit","createSession","preventDefault","length","onSubmit","placeholder","onChange","required","postUser","Error","list","history","push","handleLogout","onClick","map","price","item","match","params","desc","Date","toGMTString","doctor","submittedForm","htmlFor","path","component","exact","Login","Registration","CTreatmentList","CTreatment","CAppointmentList","AppointmentForm","App","INITIAL_STATE","submitForm","appointmentReducer","action","doctorReducer","treatmentReducer","userReducer","logged_in","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8eb41e55.chunk.js","sourcesContent":["export const FETCH_REQUEST = 'FETCH_REQUEST';\r\nexport const FETCH_FAILURE = 'FETCH_FAILURE';\r\nexport const POST_APPOINTMENT_SUCCESS = 'POST_APPOINTMENT_SUCCESS';\r\nexport const FETCH_APPOINTMENTS_SUCCESS = 'FETCH_APPOINTMENTS_SUCCESS';\r\nexport const FETCH_APPOINTMENT_SUCCESS = 'FETCH_APPOINTMENT_SUCCESS';\r\nexport const SUBMITFORM_RESET = 'SUBMITFORM_RESET';\r\nexport const FETCH_TREATMENTS_SUCCESS = 'FETCH_TREATMENTS_SUCCESS';\r\nexport const FETCH_TREATMENT_SUCCESS = 'FETCH_TREATMENT_SUCCESS';\r\nexport const FETCH_DOCTORS_SUCCESS = 'FETCH_DOCTORS_SUCCESS';\r\nexport const FETCH_DOCTOR_SUCCESS = 'FETCH_DOCTOR_SUCCESS';\r\nexport const POST_USER_SUCCESS = 'POST_USER_SUCCESS';\r\nexport const CHECK_SESSION_SUCCESS = 'CHECK_SESSION_SUCCESS';\r\nexport const LOGOUT_SUCCESS = 'lOGOUT_SUCCESS';\r\n","/* const urlApi = 'http://localhost:3001/'; */\r\nconst urlApi = 'https://dental-clinic-api.herokuapp.com/';\r\n\r\nexport default urlApi;\r\n","import axios from 'axios';\r\nimport urlApi from './urlApi';\r\nimport 'regenerator-runtime/runtime';\r\n\r\nconst config = { withCredentials: true, headers: { 'Access-Control-Allow-Origin': '*' } };\r\n\r\nexport const postUserApi = async (state, opt = '') => {\r\n  const response = await axios.post(`${urlApi}${opt}`, {\r\n    user: {\r\n      name: state.name,\r\n      email: state.email,\r\n      password: state.password,\r\n      password_confirmation: state.password_confirmation,\r\n    },\r\n  },\r\n  config);\r\n\r\n  return response.data;\r\n};\r\n\r\nexport const createSessionApi = async (state, opt = '') => {\r\n  const response = await axios.post(`${urlApi}${opt}`, {\r\n    user: {\r\n      email: state.email,\r\n      password: state.password,\r\n    },\r\n  },\r\n  config);\r\n\r\n  return response.data;\r\n};\r\n\r\nexport const checkSessionApi = async (opt = '') => {\r\n  const response = await axios.get(`${urlApi}${opt}`, config);\r\n  return response.data;\r\n};\r\n\r\nexport const logoutApi = async (opt = '') => {\r\n  const response = await axios.delete(`${urlApi}${opt}`, config);\r\n\r\n  return response.data;\r\n};\r\n","import axios from 'axios';\r\nimport urlApi from './urlApi';\r\nimport 'regenerator-runtime/runtime';\r\n\r\nconst config = { withCredentials: true, headers: { 'Access-Control-Allow-Origin': '*' } };\r\n\r\nexport const getTreatmentListApi = async (opt = '') => {\r\n  const response = await axios.get(`${urlApi}${opt}`, config);\r\n\r\n  return response.data;\r\n};\r\n\r\nexport const getTreatmentApi = async (opt = '', id) => {\r\n  const response = await axios.get(`${urlApi}${opt}`, {\r\n    id,\r\n  },\r\n  config);\r\n\r\n  return response.data;\r\n};\r\n","import axios from 'axios';\r\nimport urlApi from './urlApi';\r\nimport 'regenerator-runtime/runtime';\r\n\r\nconst config = { withCredentials: true, headers: { 'Access-Control-Allow-Origin': '*' } };\r\n\r\nconst getDoctorListApi = async (opt = '') => {\r\n  const response = await axios.get(`${urlApi}${opt}`, config);\r\n\r\n  return response.data;\r\n};\r\n\r\nexport default getDoctorListApi;\r\n","import axios from 'axios';\r\nimport urlApi from './urlApi';\r\nimport 'regenerator-runtime/runtime';\r\n\r\nconst config = { withCredentials: true, headers: { 'Access-Control-Allow-Origin': '*' } };\r\n\r\nexport const postAppointmentApi = async (state, opt = '') => {\r\n  const datetime = `${state.date} ${state.time}`;\r\n  const response = await axios.post(`${urlApi}${opt}`, {\r\n    appointment: {\r\n      date: datetime,\r\n      completed: true,\r\n      doctor_id: state.doctorID,\r\n      treatment_id: state.treatmentID,\r\n    },\r\n  },\r\n  config);\r\n\r\n  return response.data;\r\n};\r\n\r\nexport const getAppointmentListApi = async (opt = '') => {\r\n  const response = await axios.get(`${urlApi}${opt}`, config);\r\n\r\n  return response.data;\r\n};\r\n","import {\r\n  FETCH_REQUEST, FETCH_FAILURE,\r\n  POST_APPOINTMENT_SUCCESS, FETCH_APPOINTMENTS_SUCCESS, FETCH_APPOINTMENT_SUCCESS, SUBMITFORM_RESET,\r\n  FETCH_TREATMENTS_SUCCESS, FETCH_TREATMENT_SUCCESS,\r\n  FETCH_DOCTORS_SUCCESS, FETCH_DOCTOR_SUCCESS,\r\n  POST_USER_SUCCESS, CHECK_SESSION_SUCCESS, LOGOUT_SUCCESS,\r\n} from './types';\r\nimport {\r\n  postUserApi, createSessionApi,\r\n  checkSessionApi, logoutApi,\r\n} from '../api/api';\r\nimport { getTreatmentListApi, getTreatmentApi } from '../api/treatment';\r\nimport getDoctorListApi from '../api/doctor';\r\nimport { postAppointmentApi, getAppointmentListApi } from '../api/appointment';\r\n\r\nexport const fetchRequest = () => ({\r\n  type: FETCH_REQUEST,\r\n});\r\n\r\nexport const fetchFailure = error => ({\r\n  type: FETCH_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const submitFomReset = () => ({\r\n  type: SUBMITFORM_RESET,\r\n});\r\n\r\nexport const postAppointmentSuccess = appointments => ({\r\n  type: POST_APPOINTMENT_SUCCESS,\r\n  payload: appointments,\r\n});\r\n\r\nexport const fetchAppointmentsSuccess = appointments => ({\r\n  type: FETCH_APPOINTMENTS_SUCCESS,\r\n  payload: appointments,\r\n});\r\n\r\nexport const fetchAppointmentSuccess = appointment => ({\r\n  type: FETCH_APPOINTMENT_SUCCESS,\r\n  payload: appointment,\r\n});\r\n\r\nexport const fetchTreatmentsSuccess = treatments => ({\r\n  type: FETCH_TREATMENTS_SUCCESS,\r\n  payload: treatments,\r\n});\r\n\r\nexport const fetchTreatmentSuccess = treatment => ({\r\n  type: FETCH_TREATMENT_SUCCESS,\r\n  payload: treatment,\r\n});\r\n\r\nexport const fetchDoctorsSuccess = doctors => ({\r\n  type: FETCH_DOCTORS_SUCCESS,\r\n  payload: doctors,\r\n});\r\n\r\nexport const fetchDoctorSuccess = doctor => ({\r\n  type: FETCH_DOCTOR_SUCCESS,\r\n  payload: doctor,\r\n});\r\n\r\nexport const postUserSuccess = user => ({\r\n  type: POST_USER_SUCCESS,\r\n  payload: user,\r\n});\r\n\r\nexport const checkSessionSuccess = user => ({\r\n  type: CHECK_SESSION_SUCCESS,\r\n  payload: user,\r\n});\r\n\r\nexport const logoutSuccess = status => ({\r\n  type: LOGOUT_SUCCESS,\r\n  payload: status,\r\n});\r\n\r\nexport const postAppointment = (state, opt) => (\r\n  dispatch => {\r\n    dispatch(fetchRequest());\r\n    return postAppointmentApi(state, opt)\r\n      .then(response => {\r\n        const appointment = response;\r\n        return dispatch(postAppointmentSuccess(appointment));\r\n      })\r\n      .catch(error => dispatch(fetchFailure(error.message)));\r\n  }\r\n);\r\n\r\nexport const fetchAppointments = opt => (\r\n  dispatch => {\r\n    dispatch(fetchRequest());\r\n    return getAppointmentListApi(opt)\r\n      .then(response => {\r\n        const appointments = response;\r\n        return dispatch(fetchAppointmentsSuccess(appointments));\r\n      })\r\n      .catch(error => dispatch(fetchFailure(error.message)));\r\n  }\r\n);\r\n\r\nexport const fetchTreatments = opt => (\r\n  dispatch => {\r\n    dispatch(fetchRequest());\r\n    return getTreatmentListApi(opt)\r\n      .then(response => {\r\n        const treatments = response;\r\n        return dispatch(fetchTreatmentsSuccess(treatments));\r\n      })\r\n      .catch(error => dispatch(fetchFailure(error.message)));\r\n  }\r\n);\r\n\r\nexport const fetchTreatment = (opt, id) => (\r\n  dispatch => {\r\n    dispatch(fetchRequest());\r\n    return getTreatmentApi(opt, id)\r\n      .then(response => {\r\n        const treatment = response;\r\n        return dispatch(fetchTreatmentSuccess(treatment));\r\n      })\r\n      .catch(error => dispatch(fetchFailure(error.message)));\r\n  }\r\n);\r\n\r\nexport const fetchDoctors = opt => (\r\n  dispatch => {\r\n    dispatch(fetchRequest());\r\n    return getDoctorListApi(opt)\r\n      .then(response => {\r\n        const doctors = response;\r\n        return dispatch(fetchDoctorsSuccess(doctors));\r\n      })\r\n      .catch(error => dispatch(fetchFailure(error.message)));\r\n  }\r\n);\r\n\r\nexport const postUser = (state, opt) => (\r\n  dispatch => {\r\n    dispatch(fetchRequest());\r\n    return postUserApi(state, opt)\r\n      .then(response => {\r\n        const user = response;\r\n        return dispatch(postUserSuccess(user));\r\n      })\r\n      .catch(error => dispatch(fetchFailure(error.message)));\r\n  }\r\n);\r\n\r\nexport const createSession = (state, opt) => (\r\n  dispatch => {\r\n    dispatch(fetchRequest());\r\n    return createSessionApi(state, opt)\r\n      .then(response => {\r\n        const user = response;\r\n        return dispatch(postUserSuccess(user));\r\n      })\r\n      .catch(error => dispatch(fetchFailure(error.message)));\r\n  }\r\n);\r\n\r\nexport const checkSession = opt => (\r\n  dispatch => {\r\n    dispatch(fetchRequest());\r\n    return checkSessionApi(opt)\r\n      .then(response => {\r\n        const user = response;\r\n        return dispatch(checkSessionSuccess(user));\r\n      })\r\n      .catch(error => dispatch(fetchFailure(error.message)));\r\n  }\r\n);\r\n\r\nexport const logout = opt => (\r\n  dispatch => {\r\n    dispatch(fetchRequest());\r\n    return logoutApi(opt)\r\n      .then(response => {\r\n        const status = response;\r\n        return dispatch(logoutSuccess(status));\r\n      })\r\n      .catch(error => dispatch(fetchFailure(error.message)));\r\n  }\r\n);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../assets/stylesheets/header.css';\r\n\r\nconst Header = () => (\r\n  <header className=\"header-container d-flex justify-cont-sb f-dir-col\">\r\n    <nav className=\"nav d-flex justify-cont-sb f-dir-col\">\r\n      <Link to=\"/\" className=\"deco\">\r\n        <h1 className=\"brand\">Dental Clinic</h1>\r\n      </Link>\r\n      <ul>\r\n        <Link to=\"/treatments\" className=\"deco\"><li className=\"nav-item\">TREATMENTS</li></Link>\r\n        <Link to=\"/appointments\" className=\"deco\"><li className=\"nav-item\">APPOINTMENTS</li></Link>\r\n      </ul>\r\n    </nav>\r\n    <div className=\"w-100\">\r\n      <ul className=\"social d-flex justify-cont-sa\">\r\n        <li className=\"item\">\r\n          <a className=\"profile-link\" href=\"https://github.com/LoboArkano\" target=\"_blank\" rel=\"noreferrer\" aria-label=\"Github\"><i className=\"fab fa-github\" /></a>\r\n        </li>\r\n        <li className=\"item\">\r\n          <a className=\"profile-link\" href=\"https://www.linkedin.com/in/jose-roberto-perez-jimenez/\" target=\"_blank\" rel=\"noreferrer\" aria-label=\"Linkedin\"><i className=\"fab fa-linkedin\" /></a>\r\n        </li>\r\n        <li className=\"item\">\r\n          <a className=\"profile-link\" href=\"https://angel.co/u/jose-roberto-perez-jimenez\" target=\"_blank\" rel=\"noreferrer\" aria-label=\"AngelList\"><i className=\"fab fa-angellist\" /></a>\r\n        </li>\r\n        <li className=\"item\">\r\n          <a className=\"profile-link\" href=\"https://twitter.com/LoboArcano92\" target=\"_blank\" rel=\"noreferrer\" aria-label=\"Twitter\"><i className=\"fab fa-twitter-square\" /></a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../assets/stylesheets/main.css';\r\n\r\nconst Main = () => (\r\n  <main className=\"main w-100 d-flex align-i-fe justify-cont-fe show\">\r\n    <div className=\"session d-flex justify-cont-sb\">\r\n      <Link to=\"/sign-up\" className=\"session-btn deco\">Create Account</Link>\r\n      <Link to=\"/login\" className=\"session-btn deco\">Login</Link>\r\n    </div>\r\n  </main>\r\n);\r\n\r\nexport default Main;\r\n","export default __webpack_public_path__ + \"static/media/loading.5f3ffa87.png\";","import React from 'react';\r\nimport loadingImg from '../assets/images/loading.png';\r\n\r\nconst Loading = () => (\r\n  <div className=\"loading d-flex w-100\">\r\n    <img className=\"loading-img\" src={loadingImg} alt=\"\" />\r\n  </div>\r\n);\r\n\r\nexport default Loading;\r\n","import React, { useCallback, useState, useEffect } from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { checkSession, createSession } from '../actions/index';\r\nimport '../assets/stylesheets/login.css';\r\nimport Loading from '../components/Loading';\r\n\r\nconst Registration = props => {\r\n  const { error, loggedInStatus, loading } = props;\r\n  const [state, setState] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(checkSession('logged_in'));\r\n  }, []);\r\n\r\n  const handleChange = useCallback(e => {\r\n    const { name, value } = e.target;\r\n\r\n    setState({\r\n      ...state,\r\n      [name]: value,\r\n    });\r\n  });\r\n\r\n  const handleSubmit = useCallback(e => {\r\n    dispatch(createSession(state, 'sessions'));\r\n    e.preventDefault();\r\n  });\r\n\r\n  if (loggedInStatus) {\r\n    return <Redirect to=\"/treatments\" />;\r\n  }\r\n\r\n  return (\r\n    <main className=\"w-85\">\r\n      {\r\n      loading\r\n        ? (\r\n          <Loading />\r\n        )\r\n        : (\r\n          <section className=\"d-flex align-i-c f-dir-col show\">\r\n            {\r\n              error.length\r\n                ? (\r\n                  <div>{error}</div>\r\n                )\r\n                : ''\r\n            }\r\n            <form className=\"login-form d-flex f-dir-col align-i-c\" onSubmit={handleSubmit}>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                className=\"input\"\r\n                placeholder=\"Email\"\r\n                value={state.email}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                className=\"input\"\r\n                placeholder=\"Password\"\r\n                value={state.password}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n              <button type=\"submit\" className=\"submit-btn\">Login</button>\r\n            </form>\r\n            <div className=\"session-option\">\r\n              <Link to=\"/sign-up\" className=\"session-link deco\">Create a New Account</Link>\r\n            </div>\r\n          </section>\r\n        )\r\n      }\r\n    </main>\r\n  );\r\n};\r\n\r\nRegistration.propTypes = {\r\n  error: PropTypes.string.isRequired,\r\n  loggedInStatus: PropTypes.bool.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { user } = state;\r\n  const { error, loggedInStatus, loading } = user;\r\n\r\n  return { error, loggedInStatus, loading };\r\n};\r\n\r\nconst mapDistpatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDistpatchToProps)(Registration);\r\n","import React, { useCallback, useState, useEffect } from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { checkSession, postUser } from '../actions/index';\r\nimport '../assets/stylesheets/sign-up.css';\r\nimport Loading from '../components/Loading';\r\n\r\nconst Registration = props => {\r\n  const { error, loggedInStatus, loading } = props;\r\n  const [state, setState] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password_confirmation: '',\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(checkSession('logged_in'));\r\n  }, []);\r\n\r\n  const handleChange = useCallback(e => {\r\n    const { name, value } = e.target;\r\n\r\n    setState({\r\n      ...state,\r\n      [name]: value,\r\n    });\r\n  });\r\n\r\n  const handleSubmit = useCallback(e => {\r\n    dispatch(postUser(state, 'registrations'));\r\n    e.preventDefault();\r\n  });\r\n\r\n  if (loggedInStatus) {\r\n    return <Redirect to=\"/treatments\" />;\r\n  }\r\n\r\n  return (\r\n    <main className=\"w-85\">\r\n      {\r\n        loading\r\n          ? (\r\n            <Loading />\r\n          )\r\n          : (\r\n            <section className=\"d-flex align-i-c f-dir-col show\">\r\n              {\r\n                error.length\r\n                  ? (\r\n                    <div>{error}</div>\r\n                  )\r\n                  : ''\r\n              }\r\n              <form className=\"sign-up-form d-flex f-dir-col align-i-c\" onSubmit={handleSubmit}>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  className=\"input\"\r\n                  placeholder=\"Username\"\r\n                  value={state.name}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  className=\"input\"\r\n                  placeholder=\"Email\"\r\n                  value={state.email}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  className=\"input\"\r\n                  placeholder=\"Password\"\r\n                  value={state.password}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"password_confirmation\"\r\n                  name=\"password_confirmation\"\r\n                  className=\"input\"\r\n                  placeholder=\"Password Confirmation\"\r\n                  value={state.password_confirmation}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n                <button type=\"submit\" className=\"submit-btn\">Create Account</button>\r\n              </form>\r\n              <div className=\"session-option\">\r\n                <Link to=\"/login\" className=\"session-link deco\">I Have an Account</Link>\r\n              </div>\r\n            </section>\r\n          )\r\n      }\r\n    </main>\r\n  );\r\n};\r\n\r\nRegistration.propTypes = {\r\n  error: PropTypes.string.isRequired,\r\n  loggedInStatus: PropTypes.bool.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { user } = state;\r\n  const { error, loggedInStatus, loading } = user;\r\n\r\n  return { error, loggedInStatus, loading };\r\n};\r\n\r\nconst mapDistpatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDistpatchToProps)(Registration);\r\n","import React from 'react';\r\nimport '../assets/stylesheets/error.css';\r\n\r\nconst Error = () => (\r\n  <article className=\"error-container d-flex w-100\">\r\n    <h1>Ooops!! Page not found</h1>\r\n  </article>\r\n);\r\n\r\nexport default Error;\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchTreatments, logout } from '../actions/index';\r\nimport Error from '../components/Error';\r\nimport '../assets/stylesheets/treatmentList.css';\r\nimport Loading from '../components/Loading';\r\n\r\nconst TreatmentList = props => {\r\n  const {\r\n    user, history,\r\n    loading, list,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTreatments('treatments'));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!user.loggedInStatus && !user.loading) {\r\n      history.push('/login');\r\n    }\r\n  }, [user.loggedInStatus]);\r\n\r\n  const handleLogout = useCallback(() => {\r\n    dispatch(logout('logout'));\r\n  });\r\n\r\n  if (user.error.length) {\r\n    return <Error />;\r\n  }\r\n\r\n  return (\r\n    <main className=\"w-85 vh-100\">\r\n      {\r\n        loading\r\n          ? (\r\n            <Loading />\r\n          )\r\n          : (\r\n            <div className=\"d-flex f-dir-col w-100 h-100 show\">\r\n              <button type=\"button\" onClick={handleLogout} className=\"logout-btn\">Logout</button>\r\n              <section className=\"treatment-list d-flex f-wrap justify-cont-sa w-100\">\r\n                {\r\n                  list.map(treatment => (\r\n                    <Link to={`/treatment/${treatment.id}`} className=\"treatment-card h-max deco\" key={treatment.name}>\r\n                      <article>\r\n                        <h3 className=\"treatment-name\">{treatment.name}</h3>\r\n                        <p>{`${treatment.price} USD`}</p>\r\n                      </article>\r\n                    </Link>\r\n                  ))\r\n                }\r\n              </section>\r\n            </div>\r\n          )\r\n      }\r\n    </main>\r\n  );\r\n};\r\n\r\nTreatmentList.propTypes = {\r\n  user: PropTypes.shape({\r\n    error: PropTypes.string.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    loggedInStatus: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  list: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n  })).isRequired,\r\n  history: PropTypes.shape().isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { user, treatments } = state;\r\n  const { loading, list } = treatments;\r\n\r\n  return {\r\n    user, loading, list,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TreatmentList);\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchTreatment, logout } from '../actions/index';\r\nimport Error from '../components/Error';\r\nimport '../assets/stylesheets/treatment.css';\r\nimport Loading from '../components/Loading';\r\n\r\nconst Treatment = props => {\r\n  const {\r\n    user, history,\r\n    loading, item, match,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTreatment(`treatments/${match.params.id}`, match.params.id));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!user.loggedInStatus && !user.loading) {\r\n      history.push('/login');\r\n    }\r\n  }, [user.loggedInStatus]);\r\n\r\n  const handleLogout = useCallback(() => {\r\n    dispatch(logout('logout'));\r\n  });\r\n\r\n  if (user.error.length) {\r\n    return <Error />;\r\n  }\r\n\r\n  return (\r\n    <main className=\"w-85\">\r\n      {\r\n        loading\r\n          ? (\r\n            <Loading />\r\n          )\r\n          : (\r\n            <section className=\"d-flex f-dir-col w-100 show\">\r\n              <button type=\"button\" onClick={handleLogout} className=\"logout-btn\">Logout</button>\r\n              <article key={item.name} className=\"treatment w-100\">\r\n                <h2 className=\"treat-name\">{`Treatment: ${item.name}`}</h2>\r\n                <p className=\"treat-price\">{`Price: ${item.price}`}</p>\r\n                <p className=\"treat-desc\">{`${item.desc}`}</p>\r\n                <Link to=\"/appointment-form\" className=\"appointment-link deco\">\r\n                  Make an Appointment\r\n                </Link>\r\n              </article>\r\n            </section>\r\n          )\r\n      }\r\n    </main>\r\n  );\r\n};\r\n\r\nTreatment.propTypes = {\r\n  user: PropTypes.shape({\r\n    error: PropTypes.string.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    loggedInStatus: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  item: PropTypes.shape().isRequired,\r\n  match: PropTypes.shape().isRequired,\r\n  history: PropTypes.shape().isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { user, treatments } = state;\r\n  const { loading, item } = treatments;\r\n\r\n  return {\r\n    user, loading, item,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Treatment);\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { logout, fetchAppointments } from '../actions/index';\r\nimport Error from '../components/Error';\r\nimport '../assets/stylesheets/appointment-list.css';\r\nimport Loading from '../components/Loading';\r\n\r\nconst AppointmentList = props => {\r\n  const {\r\n    user, history,\r\n    list, loading,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAppointments('appointments'));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!user.loggedInStatus && !user.loading) {\r\n      history.push('/login');\r\n    }\r\n  }, [user.loggedInStatus]);\r\n\r\n  const handleLogout = useCallback(() => {\r\n    dispatch(logout('logout'));\r\n  });\r\n\r\n  if (user.error.length) {\r\n    return <Error />;\r\n  }\r\n\r\n  return (\r\n    <main className=\"w-85 vh-100\">\r\n      {\r\n      loading\r\n        ? (\r\n          <Loading />\r\n        )\r\n        : (\r\n          <div className=\"d-flex f-dir-col w-100 h-100 show\">\r\n            <button type=\"button\" onClick={handleLogout} className=\"logout-btn\">Logout</button>\r\n            <section className=\"appoint-list d-flex f-wrap w-100\">\r\n              {\r\n                list.map(appointment => (\r\n                  <article key={appointment.id} className=\"appoint-card\">\r\n                    <h2 className=\"appoint-no\">{`Appointment No: ${appointment.id}`}</h2>\r\n                    <p className=\"\">{`Date: ${new Date(appointment.date).toGMTString()}`}</p>\r\n                    <p className=\"\">{`Status: ${appointment.completed ? 'Completed' : 'Pending'}`}</p>\r\n                    <p className=\"\">{`Doctor: ${appointment.doctor.name}`}</p>\r\n                    <p className=\"\">{`Treatment: ${appointment.treatment.name}`}</p>\r\n                    <p className=\"\">{`Price: ${appointment.treatment.price} USD`}</p>\r\n                    <p className=\"\">{`Description: ${appointment.treatment.desc}`}</p>\r\n                  </article>\r\n                ))\r\n              }\r\n            </section>\r\n          </div>\r\n        )\r\n      }\r\n    </main>\r\n  );\r\n};\r\n\r\nAppointmentList.propTypes = {\r\n  user: PropTypes.shape({\r\n    error: PropTypes.string.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    loggedInStatus: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n  list: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n    doctor: PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n    treatment: PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      price: PropTypes.number.isRequired,\r\n      desc: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  })).isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  history: PropTypes.shape().isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { user, appointments } = state;\r\n  const { list, loading } = appointments;\r\n\r\n  return {\r\n    user, list, loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppointmentList);\r\n","import React, { useCallback, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport {\r\n  logout, fetchTreatments, fetchDoctors, postAppointment,\r\n} from '../actions/index';\r\nimport Error from '../components/Error';\r\nimport '../assets/stylesheets/appointment-form.css';\r\nimport Loading from '../components/Loading';\r\n\r\nconst AppointmentForm = props => {\r\n  const {\r\n    user, history,\r\n    treatments, doctors,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, setState] = useState({\r\n    date: '',\r\n    time: '',\r\n    treatmentID: treatments.item.id ? treatments.item.id : '',\r\n    doctorID: '',\r\n    submittedForm: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTreatments('/treatments'));\r\n    dispatch(fetchDoctors('/doctors'));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!user.loggedInStatus && !user.loading) {\r\n      history.push('/login');\r\n    }\r\n  }, [user.loggedInStatus]);\r\n\r\n  const handleLogout = useCallback(() => {\r\n    dispatch(logout('logout'));\r\n  });\r\n\r\n  const handleChange = useCallback(e => {\r\n    const { name, value } = e.target;\r\n\r\n    setState({\r\n      ...state,\r\n      [name]: value,\r\n    });\r\n  }, [state]);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(postAppointment(state, 'appointments'));\r\n    setState({\r\n      ...state,\r\n      submittedForm: true,\r\n    });\r\n  };\r\n\r\n  if (user.error.length) {\r\n    return <Error />;\r\n  }\r\n\r\n  if (state.submittedForm) {\r\n    return <Redirect to=\"/appointments\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-85\">\r\n      {\r\n        treatments.loading || doctors.loading\r\n          ? (\r\n            <Loading />\r\n          )\r\n          : (\r\n            <div className=\"d-flex f-dir-col w-100 show\">\r\n              <button type=\"button\" onClick={handleLogout} className=\"logout-btn\">Logout</button>\r\n              <article className=\"d-flex align-i-c f-dir-col\">\r\n                <p className=\"form-title\">Make Your Appointment</p>\r\n                <form onSubmit={handleSubmit} className=\"appoint-form d-flex f-dir-col align-i-c\">\r\n                  <select\r\n                    name=\"treatmentID\"\r\n                    className=\"select\"\r\n                    value={treatments.item.id}\r\n                    onChange={handleChange}\r\n                    required\r\n                  >\r\n                    <option key=\"none\" value=\"\">Treatments</option>\r\n                    {\r\n                      treatments.list.map(treatment => (\r\n                        <option\r\n                          key={treatment.id}\r\n                          value={treatment.id}\r\n                        >\r\n                          { treatment.name }\r\n                        </option>\r\n                      ))\r\n                    }\r\n                  </select>\r\n                  <select\r\n                    name=\"doctorID\"\r\n                    className=\"select\"\r\n                    onChange={handleChange}\r\n                    required\r\n                  >\r\n                    <option key=\"none\" value=\"\">Doctors</option>\r\n                    {\r\n                      doctors.list.map(doctor => (\r\n                        <option\r\n                          key={doctor.id}\r\n                          value={doctor.id}\r\n                        >\r\n                          { doctor.name }\r\n                        </option>\r\n                      ))\r\n                    }\r\n                  </select>\r\n                  <div className=\"datetime d-flex justify-cont-sa\">\r\n                    <label htmlFor=\"date\">\r\n                      Date:\r\n                      <input type=\"date\" name=\"date\" className=\"datetime-input\" onChange={handleChange} value={state.date} required />\r\n                    </label>\r\n                    <label htmlFor=\"time\">\r\n                      Time:\r\n                      <input type=\"time\" name=\"time\" className=\"datetime-input\" onChange={handleChange} value={state.time} required />\r\n                    </label>\r\n                  </div>\r\n                  <button type=\"submit\" className=\"submit-btn\">Submit</button>\r\n                </form>\r\n              </article>\r\n            </div>\r\n          )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nAppointmentForm.propTypes = {\r\n  user: PropTypes.shape({\r\n    error: PropTypes.string.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    loggedInStatus: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n  treatments: PropTypes.shape({\r\n    list: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    })).isRequired,\r\n    item: PropTypes.shape().isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n  doctors: PropTypes.shape({\r\n    list: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    })).isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n  history: PropTypes.shape().isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const {\r\n    user, treatments, doctors,\r\n  } = state;\r\n\r\n  return {\r\n    user, treatments, doctors,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppointmentForm);\r\n","import React from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { checkSession } from '../actions/index';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Login from '../containers/Login';\r\nimport Registration from '../containers/Registration';\r\nimport CTreatmentList from '../containers/TreatmentList';\r\nimport CTreatment from '../containers/Treatment';\r\nimport CAppointmentList from '../containers/AppointmentList';\r\nimport AppointmentForm from '../containers/AppointmentForm';\r\nimport Error from './Error';\r\n\r\nconst Routes = () => {\r\n  const dispatch = useDispatch();\r\n  dispatch(checkSession('logged_in'));\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"d-flex w-100 vh-100\">\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/\" component={Main} exact />\r\n          <Route path=\"/login\" component={Login} exact />\r\n          <Route path=\"/sign-up\" component={Registration} exact />\r\n          <Route path=\"/treatments\" component={CTreatmentList} exact />\r\n          <Route path=\"/treatment/:id\" component={CTreatment} exact />\r\n          <Route path=\"/appointments\" component={CAppointmentList} exact />\r\n          <Route path=\"/appointment-form\" component={AppointmentForm} exact />\r\n          <Route component={Error} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(null, mapDispatchToProps)(Routes);\r\n","import React from 'react';\r\nimport Routes from './Routes';\r\n\r\nconst App = () => <Routes />;\r\n\r\nexport default App;\r\n","import {\r\n  FETCH_REQUEST, FETCH_FAILURE,\r\n  POST_APPOINTMENT_SUCCESS, FETCH_APPOINTMENTS_SUCCESS, FETCH_APPOINTMENT_SUCCESS,\r\n  SUBMITFORM_RESET,\r\n} from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n  loading: false,\r\n  error: '',\r\n  list: [],\r\n  item: {},\r\n  submitForm: false,\r\n};\r\n\r\nconst appointmentReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case FETCH_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n      };\r\n    case FETCH_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case POST_APPOINTMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        item: action.payload.appointment,\r\n        error: action.payload,\r\n        submitForm: true,\r\n      };\r\n    case FETCH_APPOINTMENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        list: action.payload,\r\n        error: '',\r\n      };\r\n    case FETCH_APPOINTMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        item: action.payload,\r\n        error: '',\r\n      };\r\n    case SUBMITFORM_RESET:\r\n      return {\r\n        ...state,\r\n        submitForm: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default appointmentReducer;\r\n","import {\r\n  FETCH_REQUEST, FETCH_FAILURE,\r\n  FETCH_DOCTORS_SUCCESS, FETCH_DOCTOR_SUCCESS,\r\n} from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n  loading: false,\r\n  error: '',\r\n  list: [],\r\n  item: {},\r\n};\r\n\r\nconst doctorReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case FETCH_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n      };\r\n    case FETCH_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case FETCH_DOCTORS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        list: action.payload.doctors,\r\n        error: '',\r\n      };\r\n    case FETCH_DOCTOR_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        item: action.payload,\r\n        error: '',\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default doctorReducer;\r\n","import {\r\n  FETCH_REQUEST, FETCH_FAILURE,\r\n  FETCH_TREATMENTS_SUCCESS, FETCH_TREATMENT_SUCCESS,\r\n} from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n  loading: false,\r\n  error: '',\r\n  list: [],\r\n  item: {},\r\n};\r\n\r\nconst treatmentReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case FETCH_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n      };\r\n    case FETCH_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case FETCH_TREATMENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        list: action.payload.treatments,\r\n        error: '',\r\n      };\r\n    case FETCH_TREATMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        item: action.payload.treatment,\r\n        error: '',\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default treatmentReducer;\r\n","import {\r\n  FETCH_REQUEST, FETCH_FAILURE,\r\n  POST_USER_SUCCESS, CHECK_SESSION_SUCCESS, LOGOUT_SUCCESS,\r\n} from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n  loading: false,\r\n  error: '',\r\n  loggedInStatus: false,\r\n  data: {},\r\n};\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case FETCH_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n      };\r\n    case FETCH_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case POST_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        loggedInStatus: action.payload.logged_in,\r\n        data: action.payload.user,\r\n        error: '',\r\n      };\r\n    case CHECK_SESSION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        loggedInStatus: action.payload.logged_in,\r\n        data: action.payload.user,\r\n      };\r\n    case LOGOUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        loggedInStatus: action.payload.logged_in,\r\n        data: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from 'redux';\r\nimport appointmentReducer from './appointment';\r\nimport doctorReducer from './doctor';\r\nimport treatmentReducer from './treatment';\r\nimport userReducer from './user';\r\n\r\nconst rootReducer = combineReducers({\r\n  appointments: appointmentReducer,\r\n  doctors: doctorReducer,\r\n  treatments: treatmentReducer,\r\n  user: userReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport App from './components/App';\r\nimport rootReducer from './reducers';\r\nimport './assets/stylesheets/reset.css';\r\nimport './assets/stylesheets/index.css';\r\n\r\nconst INITIAL_STATE = {\r\n  appointments: {\r\n    loading: false,\r\n    error: '',\r\n    list: [],\r\n    item: {},\r\n    submitForm: false,\r\n  },\r\n  doctors: {\r\n    loading: false,\r\n    error: '',\r\n    list: [],\r\n  },\r\n  treatments: {\r\n    loading: false,\r\n    error: '',\r\n    list: [],\r\n    item: {},\r\n  },\r\n  user: {\r\n    loading: false,\r\n    error: '',\r\n    loggedInStatus: false,\r\n    data: {},\r\n  },\r\n};\r\n\r\nconst store = createStore(rootReducer, INITIAL_STATE, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}