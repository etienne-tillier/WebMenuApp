{"version":3,"sources":["Containers/ShowMovie.js"],"names":["ShowMovie","state","loading","backdrop_path","budget","genres","homepage","id","overview","poster_path","release_date","revenue","runtime","original_language","status","title","vote_average","videos","results","casts","cast","recommendations","external_ids","modal","loadSingleMovie","_callee","data","C_xampp_htdocs_tmdb_clone_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","wrap","_context","prev","next","_this","toggleLoading","getSingleMovie","sent","setState","Object","C_xampp_htdocs_tmdb_clone_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__","window","scroll","top","stop","toggleModal","this","props","match","params","prevProps","prevState","url","_this$state","trailer","find","video","type","lang","languageList","iso_639_1","_this$props$match$url","split","C_xampp_htdocs_tmdb_clone_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","document","concat","react__WEBPACK_IMPORTED_MODULE_8___default","createElement","className","_Components_UI_Grid__WEBPACK_IMPORTED_MODULE_11__","_Components_UI_Loader__WEBPACK_IMPORTED_MODULE_12__","react__WEBPACK_IMPORTED_MODULE_8__","_Components_Show_Header__WEBPACK_IMPORTED_MODULE_9__","poster","year","score","text","_Components_Show_Detail__WEBPACK_IMPORTED_MODULE_10__","slice","social","releaseDate","language","english_name","Component"],"mappings":"+OASMA,8MACJC,MAAQ,CACNC,SAAS,EACTC,cAAe,KACfC,OAAQ,EACRC,OAAQ,GACRC,SAAU,KACVC,GAAI,KACJC,SAAU,KACVC,YAAa,KACbC,aAAc,GACdC,QAAS,EACTC,QAAS,KACTC,kBAAmB,KACnBC,OAAQ,KACRC,MAAO,KACPC,aAAc,EACdC,OAAQ,CACNC,QAAS,CAAC,KAEZC,MAAO,CACLC,KAAM,IAERC,gBAAiB,CACfH,QAAS,IAEXI,aAAc,GACdC,OAAO,KAeTC,sDAAkB,SAAAC,EAAMlB,GAAN,IAAAmB,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAChBC,EAAKC,gBADWJ,EAAAE,KAAA,EAEGG,YAAe5B,GAFlB,OAEVmB,EAFUI,EAAAM,KAGhBH,EAAKI,SAALC,OAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,QAAAC,EAAA,EAAAD,CAAA,GACKL,EAAKhC,OACLyB,GAFL,IAGExB,SAAS,KAEXsC,OAAOC,OAAO,CACZC,IAAK,IATS,wBAAAZ,EAAAa,SAAAlB,8DAalBS,cAAgB,WACdD,EAAKI,SAAS,CAAEnC,SAAU+B,EAAKhC,MAAMC,aAGvC0C,YAAc,WACZX,EAAKI,SAAS,CAAEd,OAAQU,EAAKhC,MAAMsB,gEA9BrC,WAAoB,IACVhB,EAAOsC,KAAKC,MAAMC,MAAMC,OAAxBzC,GACRsC,KAAKrB,gBAAgBjB,qCAGvB,SAAmB0C,EAAWC,GAAW,IAC/B3C,EAAOsC,KAAKC,MAAMC,MAAMC,OAAxBzC,GACJ0C,EAAUF,MAAMI,MAAQN,KAAKC,MAAMC,MAAMI,KAC3CN,KAAKrB,gBAAgBjB,yBAyBzB,WAAS,IAAA6C,EAkBHP,KAAK5C,MAhBPQ,EAFK2C,EAEL3C,YACAM,EAHKqC,EAGLrC,MACAL,EAJK0C,EAIL1C,aACAM,EALKoC,EAKLpC,aACAR,EANK4C,EAML5C,SACAL,EAPKiD,EAOLjD,cACAG,EARK8C,EAQL9C,SACAgB,EATK8B,EASL9B,aACAR,EAVKsC,EAULtC,OACAT,EAXK+C,EAWL/C,OACAD,EAZKgD,EAYLhD,OACAO,EAbKyC,EAaLzC,QACAC,EAdKwC,EAcLxC,QACAV,EAfKkD,EAeLlD,QACAW,EAhBKuC,EAgBLvC,kBACAU,EAjBK6B,EAiBL7B,MAEMH,EAASyB,KAAK5C,MAAMkB,MAApBC,KACSC,EAAoBwB,KAAK5C,MAAMoB,gBAAxCH,QACFmC,EAAUR,KAAK5C,MAAMgB,OAAOC,QAAQoC,KACxC,SAAAC,GAAK,MAAmB,YAAfA,EAAMC,OAEXC,EAAOC,IAAaJ,KACxB,SAAAG,GAAI,OAAIA,EAAKE,YAAc9C,IAzBtB+C,EA2BSf,KAAKC,MAAMC,MAAMI,IAAIU,MAAM,KAAlCV,EA3BFb,OAAAwB,EAAA,EAAAxB,CAAAsB,EAAA,MA6BP,OADAG,SAAShD,MAAT,cAAAiD,OAA+BjD,EAAK,KAAAiD,OAAQjD,GAAU,IAEpDkD,EAAArC,EAAAsC,cAAA,WAASC,UAAU,gBAChBjE,EACC+D,EAAArC,EAAAsC,cAACE,EAAA,EAAD,KACEH,EAAArC,EAAAsC,cAACG,EAAA,EAAD,CAAQb,KAAK,UAGfS,EAAArC,EAAAsC,cAACI,EAAA,SAAD,KACEL,EAAArC,EAAAsC,cAACK,EAAA,EAAD,CACExD,MAAOA,EACPyD,OAAQ/D,EACRgE,KAAM/D,EACNgE,MAAO1D,EACPqC,QAASA,EACTsB,KAAMnE,EACNL,cAAeA,EACfoB,MAAOA,EACPqB,YAAaC,KAAKD,cAEpBqB,EAAArC,EAAAsC,cAACU,EAAA,EAAD,CACEzB,IAAKA,EACLpC,MAAOA,EACPI,MAAOC,EAAKyD,MAAM,EAAG,GACrBxD,gBAAiBA,EACjBf,SAAUA,EACVwE,OAAQxD,EACRR,OAAQA,EACRiE,YAAarE,EACbsE,SAAUvB,EAAKwB,aACf5E,OAAQA,EACRD,OAAQA,EACRO,QAASA,EACTC,QAASA,aA5HCsE,aAqITlF","file":"static/js/10.b1b1ef8b.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport Header from '../Components/Show/Header';\r\nimport Detail from '../Components/Show/Detail';\r\nimport { Container } from '../Components/UI/Grid';\r\nimport Loader from '../Components/UI/Loader';\r\n\r\nimport { getSingleMovie } from '../helpers/api';\r\nimport { languageList } from '../shared/List';\r\n\r\nclass ShowMovie extends Component {\r\n  state = {\r\n    loading: false,\r\n    backdrop_path: null,\r\n    budget: 0,\r\n    genres: [],\r\n    homepage: null,\r\n    id: null,\r\n    overview: null,\r\n    poster_path: null,\r\n    release_date: '',\r\n    revenue: 0,\r\n    runtime: null,\r\n    original_language: 'en',\r\n    status: null,\r\n    title: null,\r\n    vote_average: 0,\r\n    videos: {\r\n      results: [{}],\r\n    },\r\n    casts: {\r\n      cast: [],\r\n    },\r\n    recommendations: {\r\n      results: [],\r\n    },\r\n    external_ids: {},\r\n    modal: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.loadSingleMovie(id);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { id } = this.props.match.params;\r\n    if (prevProps.match.url !== this.props.match.url) {\r\n      this.loadSingleMovie(id);\r\n    }\r\n  }\r\n\r\n  loadSingleMovie = async id => {\r\n    this.toggleLoading();\r\n    const data = await getSingleMovie(id);\r\n    this.setState({\r\n      ...this.state,\r\n      ...data,\r\n      loading: false,\r\n    });\r\n    window.scroll({\r\n      top: 0,\r\n    });\r\n  };\r\n\r\n  toggleLoading = () => {\r\n    this.setState({ loading: !this.state.loading });\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({ modal: !this.state.modal });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      poster_path,\r\n      title,\r\n      release_date,\r\n      vote_average,\r\n      overview,\r\n      backdrop_path,\r\n      homepage,\r\n      external_ids,\r\n      status,\r\n      genres,\r\n      budget,\r\n      revenue,\r\n      runtime,\r\n      loading,\r\n      original_language,\r\n      modal,\r\n    } = this.state;\r\n    const { cast } = this.state.casts;\r\n    const { results: recommendations } = this.state.recommendations;\r\n    const trailer = this.state.videos.results.find(\r\n      video => video.type === 'Trailer',\r\n    );\r\n    const lang = languageList.find(\r\n      lang => lang.iso_639_1 === original_language,\r\n    );\r\n    const [, url] = this.props.match.url.split('/');\r\n    document.title = `TMDB Clone ${title ? `| ${title}` : ''}`;\r\n    return (\r\n      <section className='section-show'>\r\n        {loading ? (\r\n          <Container>\r\n            <Loader type='show' />\r\n          </Container>\r\n        ) : (\r\n          <Fragment>\r\n            <Header\r\n              title={title}\r\n              poster={poster_path}\r\n              year={release_date}\r\n              score={vote_average}\r\n              trailer={trailer}\r\n              text={overview}\r\n              backdrop_path={backdrop_path}\r\n              modal={modal}\r\n              toggleModal={this.toggleModal}\r\n            />\r\n            <Detail\r\n              url={url}\r\n              title={title}\r\n              casts={cast.slice(0, 5)}\r\n              recommendations={recommendations}\r\n              homepage={homepage}\r\n              social={external_ids}\r\n              status={status}\r\n              releaseDate={release_date}\r\n              language={lang.english_name}\r\n              genres={genres}\r\n              budget={budget}\r\n              revenue={revenue}\r\n              runtime={runtime}\r\n            />\r\n          </Fragment>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowMovie;\r\n"],"sourceRoot":""}